<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="Learn_ChEMBL17_BoW_supporting" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if SES is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{D1AB276B-381E-4b8e-9244-37D49F7C11BF}</sci:value>
			</sci:arg>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>gerardvw</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Fri Feb 07 11:17:20 2014</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>8.5.0.200</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Learn_ChEMBL17_BoW_supporting</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{565799BD-AB24-7273-B3C2-2135865F72F0}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Text-mining1</sci:value>
				<sci:value>This is your help window for working with components and protocols in Pipeline Pilot.
&lt;BR&gt;&lt;BR&gt;
This window can display help about the protocol itself. You are currently viewing the default help text for a protocol. When you design and save a protocol, it is recommended that you change this text to specifically describe the protocol you have designed.
&lt;BR&gt;&lt;BR&gt;
This window also displays help text for individual components and their parameters. To see help for a component, select an item from the Components tab or from within the protocol workspace. To see help about a parameter of a component, select one from the Parameter tab.
&lt;BR&gt;&lt;BR&gt;
For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/getstart/getstart_intro.htm&apos;)&quot;&gt;Getting Started with Pipeline Pilot&lt;/a&gt;.</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
				<sci:value>%VERSION 3%</sci:value>
				<sci:value>866 -95 2016 265</sci:value>
				<sci:value>255 0 0</sci:value>
				<sci:value># Written by Gerard van Westen, gerardvw@ebi.ac.uk  and George Papadatos, georgep@ebi.ac.uk   
# Â© EMBL-EBI 2014
# Licensed under Apache General License 2.0
# If you plan to modify and redistribute this protocol please contact the original authors</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Protocols\share\Gerard\Text_Mining\Chembl_likeness_paper\Learn_ChEMBL17_BoW_supporting</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Delimited Text Text Reader" version="2">
					<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
						<sci:value>BoW	Removal
1	Yes
2	Yes
3	Yes
4	Yes
5	Yes
6	Yes
7	Yes
8	Yes
9	Yes
a	Yes
about	Yes
above	Yes
after	Yes
again	Yes
against	Yes
all	Yes
am	Yes
an	Yes
and	Yes
any	Yes
are	Yes
aren&apos;t	Yes
as	Yes
at	Yes
be	Yes
because	Yes
been	Yes
before	Yes
being	Yes
below	Yes
between	Yes
both	Yes
but	Yes
by	Yes
can&apos;t	Yes
cannot	Yes
could	Yes
couldn&apos;t	Yes
did	Yes
didn&apos;t	Yes
do	Yes
does	Yes
doesn&apos;t	Yes
doing	Yes
don&apos;t	Yes
down	Yes
during	Yes
each	Yes
few	Yes
for	Yes
from	Yes
further	Yes
had	Yes
hadn&apos;t	Yes
has	Yes
hasn&apos;t	Yes
have	Yes
haven&apos;t	Yes
having	Yes
he	Yes
he&apos;d	Yes
he&apos;ll	Yes
he&apos;s	Yes
her	Yes
here	Yes
here&apos;s	Yes
hers	Yes
herself	Yes
him	Yes
himself	Yes
his	Yes
how	Yes
how&apos;s	Yes
i	Yes
i&apos;d	Yes
i&apos;ll	Yes
i&apos;m	Yes
i&apos;ve	Yes
if	Yes
in	Yes
into	Yes
is	Yes
isn&apos;t	Yes
it	Yes
it&apos;s	Yes
its	Yes
itself	Yes
let&apos;s	Yes
me	Yes
more	Yes
most	Yes
mustn&apos;t	Yes
my	Yes
myself	Yes
no	Yes
nor	Yes
not	Yes
of	Yes
off	Yes
on	Yes
once	Yes
only	Yes
or	Yes
other	Yes
ought	Yes
our	Yes
ours	Yes
ourselves	Yes
out	Yes
over	Yes
own	Yes
same	Yes
shan&apos;t	Yes
she	Yes
she&apos;d	Yes
she&apos;ll	Yes
she&apos;s	Yes
should	Yes
shouldn&apos;t	Yes
so	Yes
some	Yes
such	Yes
than	Yes
that	Yes
that&apos;s	Yes
the	Yes
their	Yes
theirs	Yes
them	Yes
themselves	Yes
then	Yes
there	Yes
there&apos;s	Yes
these	Yes
they	Yes
they&apos;d	Yes
they&apos;ll	Yes
they&apos;re	Yes
they&apos;ve	Yes
this	Yes
those	Yes
through	Yes
to	Yes
too	Yes
under	Yes
until	Yes
up	Yes
very	Yes
was	Yes
wasn&apos;t	Yes
we	Yes
we&apos;d	Yes
we&apos;ll	Yes
we&apos;re	Yes
we&apos;ve	Yes
were	Yes
weren&apos;t	Yes
what	Yes
what&apos;s	Yes
when	Yes
when&apos;s	Yes
where	Yes
where&apos;s	Yes
which	Yes
while	Yes
who	Yes
who&apos;s	Yes
whom	Yes
why	Yes
why&apos;s	Yes
with	Yes
won&apos;t	Yes
would	Yes
wouldn&apos;t	Yes
you	Yes
you&apos;d	Yes
you&apos;ll	Yes
you&apos;re	Yes
you&apos;ve	Yes
your	Yes
yours	Yes
yourself	Yes
yourselves	Yes
across	Yes
almost	Yes
alone	Yes
along	Yes
already	Yes
also	Yes
although	Yes
always	Yes
among	Yes
another	Yes
anybody	Yes
anyone	Yes
anything	Yes
anywhere	Yes
area	Yes
areas	Yes
around	Yes
ask	Yes
asked	Yes
asking	Yes
asks	Yes
away	Yes
b	Yes
back	Yes
backed	Yes
backing	Yes
backs	Yes
became	Yes
become	Yes
becomes	Yes
began	Yes
behind	Yes
beings	Yes
best	Yes
better	Yes
big	Yes
c	Yes
came	Yes
can	Yes
case	Yes
cases	Yes
certain	Yes
certainly	Yes
clear	Yes
clearly	Yes
come	Yes
d	Yes
differ	Yes
different	Yes
differently	Yes
done	Yes
downed	Yes
downing	Yes
downs	Yes
e	Yes
early	Yes
either	Yes
end	Yes
ended	Yes
ending	Yes
ends	Yes
enough	Yes
even	Yes
evenly	Yes
ever	Yes
every	Yes
everybody	Yes
everyone	Yes
everything	Yes
everywhere	Yes
f	Yes
face	Yes
faces	Yes
fact	Yes
facts	Yes
far	Yes
felt	Yes
find	Yes
finds	Yes
first	Yes
four	Yes
full	Yes
fully	Yes
furthered	Yes
furthering	Yes
furthers	Yes
g	Yes
gave	Yes
general	Yes
generally	Yes
get	Yes
gets	Yes
give	Yes
given	Yes
gives	Yes
go	Yes
going	Yes
good	Yes
goods	Yes
got	Yes
great	Yes
greater	Yes
greatest	Yes
group	Yes
grouped	Yes
grouping	Yes
groups	Yes
h	Yes
high	Yes
higher	Yes
highest	Yes
however	Yes
important	Yes
interest	Yes
interested	Yes
interesting	Yes
interests	Yes
j	Yes
just	Yes
k	Yes
keep	Yes
keeps	Yes
kind	Yes
knew	Yes
know	Yes
known	Yes
knows	Yes
l	Yes
large	Yes
largely	Yes
last	Yes
later	Yes
latest	Yes
least	Yes
less	Yes
let	Yes
lets	Yes
like	Yes
likely	Yes
long	Yes
longer	Yes
longest	Yes
m	Yes
made	Yes
make	Yes
making	Yes
man	Yes
many	Yes
may	Yes
member	Yes
members	Yes
men	Yes
might	Yes
mostly	Yes
mr	Yes
mrs	Yes
much	Yes
must	Yes
n	Yes
necessary	Yes
need	Yes
needed	Yes
needing	Yes
needs	Yes
never	Yes
new	Yes
newer	Yes
newest	Yes
next	Yes
nobody	Yes
non	Yes
noone	Yes
nothing	Yes
now	Yes
nowhere	Yes
number	Yes
numbers	Yes
o	Yes
often	Yes
old	Yes
older	Yes
oldest	Yes
one	Yes
open	Yes
opened	Yes
opening	Yes
opens	Yes
order	Yes
ordered	Yes
ordering	Yes
orders	Yes
others	Yes
p	Yes
part	Yes
parted	Yes
parting	Yes
parts	Yes
per	Yes
perhaps	Yes
place	Yes
places	Yes
point	Yes
pointed	Yes
pointing	Yes
points	Yes
possible	Yes
present	Yes
presented	Yes
presenting	Yes
presents	Yes
problem	Yes
problems	Yes
put	Yes
puts	Yes
q	Yes
quite	Yes
r	Yes
rather	Yes
really	Yes
right	Yes
room	Yes
rooms	Yes
s	Yes
said	Yes
saw	Yes
say	Yes
says	Yes
second	Yes
seconds	Yes
see	Yes
seem	Yes
seemed	Yes
seeming	Yes
seems	Yes
sees	Yes
several	Yes
shall	Yes
show	Yes
showed	Yes
showing	Yes
shows	Yes
side	Yes
sides	Yes
since	Yes
small	Yes
smaller	Yes
smallest	Yes
somebody	Yes
someone	Yes
something	Yes
somewhere	Yes
state	Yes
states	Yes
still	Yes
sure	Yes
t	Yes
take	Yes
taken	Yes
therefore	Yes
thing	Yes
things	Yes
think	Yes
thinks	Yes
though	Yes
thought	Yes
thoughts	Yes
three	Yes
thus	Yes
today	Yes
together	Yes
took	Yes
toward	Yes
turn	Yes
turned	Yes
turning	Yes
turns	Yes
two	Yes
u	Yes
upon	Yes
us	Yes
use	Yes
used	Yes
uses	Yes
v	Yes
w	Yes
want	Yes
wanted	Yes
wanting	Yes
wants	Yes
way	Yes
ways	Yes
well	Yes
wells	Yes
went	Yes
whether	Yes
whole	Yes
whose	Yes
will	Yes
within	Yes
without	Yes
work	Yes
worked	Yes
working	Yes
works	Yes
x	Yes
y	Yes
year	Yes
years	Yes
yet	Yes
young	Yes
younger	Yes
youngest	Yes
z	Yes
</sci:value>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>FigureOut</sci:legalval>
						<sci:legalval selected="true">Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
						<sci:help>A comma separated list of global properties which will be automatically 
exported if this protocol is published as a web service.</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
						<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Apr 27 12:39:50 2009</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Stopwords to cache</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read Delimited Text kept with this component as a parameter value	</sci:value>
						<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.37</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>18</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Writer" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Append</sci:member>
						<sci:member>Scope</sci:member>
						<sci:value>stopwords</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write to the cache.</sci:help>
					</sci:arg>
					<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
						<sci:legalval>Job Only</sci:legalval>
						<sci:legalval selected="true">User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
						<sci:member>JoinUsing</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:member>JoinUsingListType</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:value>BoW</sci:value>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Write Globals</sci:member>
					</sci:arg>
					<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval selected="true">Writer</sci:legalval>
						<sci:legalval>Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 25 11:53:25 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -95</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.5</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>19</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Keep Properties" version="2">
					<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>Comma-separated list of property names to keep</sci:help>
						<sci:member>RenameList</sci:member>
						<sci:value>bow, Hash_to_word</sci:value>
					</sci:arg>
					<sci:arg name="RenameList" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>Keep</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu May 22 15:46:56 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Keep Properties</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2682 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Keeps only the specified properties</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;RenameList&lt;/i&gt; if you wish to change the names of the retained properties.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>With only the specified properties remaining</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.1.100</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>120</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Keep Properties</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.SeparateValues.1">
				<sci:component name="Unmerge Data" version="2">
					<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Large Data Records</sci:member>
					</sci:arg>
					<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 27 15:13:59 2009</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unmerge Data</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unmerge Data</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>GENERATORNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2970 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
						<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>121</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Unmerge Data</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">6.0.0.44</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="First Occurrence Filter" version="2">
					<sci:arg name="KeyProperty" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the property holding values to keep only one of.  If you give a comma-separated list of multiple keys, then all values must have occurred at the same time on some other record for it to be rejected.</sci:help>
						<sci:member>CaseSensitive</sci:member>
						<sci:value>BoW</sci:value>
					</sci:arg>
					<sci:arg name="CaseSensitive" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to perform the comparison as case-sensitive or case-insensitive 
strings</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>FirstOccurrence</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Jan 16 14:54:51 2003</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>First Occurrence
Filter</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Expression Filter</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{D2EC3EBB-CD17-4093-93A9-D9FB603DE083}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>3258 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which the values of specified properties have not been seen on any previous record

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;KeyProperty&lt;/i&gt; is checked.  If the value has not been seen in earlier records, the record is sent out the Pass port.  Otherwise it is sent out the Fail port.&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To filter for data records with property values that occur once and only once in the input stream, use &lt;a href=&quot;javascript:DoLink(&apos;{2FD9ECF2-C47F-4A20-AC72-5F352E08FC98}&apos;)&quot;&gt;Unique Filter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with the first occurrence of a value of the given property.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with the second and subsequent occurrences of a value of the given property.</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>122</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Filters\First Occurrence Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Writer" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Append</sci:member>
						<sci:member>Scope</sci:member>
						<sci:value>word_to_bit</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write to the cache.</sci:help>
					</sci:arg>
					<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
						<sci:member>JoinUsing</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:member>JoinUsingListType</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Write Globals</sci:member>
					</sci:arg>
					<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval selected="true">Writer</sci:legalval>
						<sci:legalval>Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 25 11:53:25 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>3546 -470</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>3482 -120 648 266</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>The cache can be used to interpret the models and highlight predictive features
</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.5</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>124</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Learn Good From Bad" version="2">
					<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
						<sci:value>chembl-likeness_bow_17</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:help>A Boolean PilotScript expression that is used to distinguish the &quot;good&quot; samples from the &quot;bad&quot; (baseline) samples. The expression should be True for each &quot;good&quot; sample and False for all others.</sci:help>
						<sci:value>set eq &apos;good&apos;</sci:value>
					</sci:arg>
					<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
</sci:help>
						<sci:member>UserSet</sci:member>
						<sci:member>IgnoreProperties</sci:member>
						<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
						<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
						<sci:legalval selected="true">UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;
If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined
on the first data record, then all properties in that range are included.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
						<sci:value>bow</sci:value>
					</sci:arg>
					<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. 

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;li&gt;Validate Models: Computes leave-one-out cross-validation statistics and add this information to the model component help.

&lt;li&gt;Remove Uninformative Bins: Removes bins that make only a small contribution to the model score (smaller in magnitude than 0.05). This decreases the amount of disk space required to save the model component.

&lt;li&gt;Ignore Uninformative Bins: Retains bins that make only a small contribution to the model score, but ignore these bins when making predictions. Scores obtained with this option are identical to those with &quot;remove Uninformative Bins&quot;, but retaining the extra information allows formerly uninformative bins to become informative when adding new data to the model with &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;.

&lt;li&gt;Equipopulate Bins: Subdivides continuous variables so that each bin contains roughly the same number of samples.

&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The Bayesian method used by this learner is highly efficient and can create a model from even hundreds of thousands of data records in a short time. By contrast, the PCA calculation required by the &quot;Perform OPS Analysis&quot; option is much slower and can increase the learning time by an order of magnitude or more for a large training set. It is best to use this option by re-training from the same data set &lt;i&gt;after&lt;/i&gt; you have validated a model built with this learner and have decided to keep the model for later use.

&lt;li&gt;For models created by this learner, it is not strictly necessary to specify &quot;Save Training Properties&quot; in order to extend the model with new data using &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;. However, if you wish to obtain cross-validation statistics for the extended model, you must save the training properties.

&lt;li&gt;If you select the &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; option and wish to track the features of a fingerprint property in addition to categorical property values, then perform the following steps: Right-click the model component and select &quot;Edit...&quot;. Add a new parameter named &quot;Model Domain Fingerprint&quot;. A message alerts you that a duplicate parameter was found. Click the Yes button to re-use the parameter. Click OK on the dialog. Then enter the name of your fingerprint property as the value of &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Model Domain Fingerprint</sci:member>
						<sci:member>Numeric Distance Function</sci:member>
						<sci:member>Fingerprint Distance Function</sci:member>
						<sci:member>Additional Properties</sci:member>
						<sci:legalval>Save Training Properties</sci:legalval>
						<sci:legalval>Encrypt Data</sci:legalval>
						<sci:legalval>Track Property Ranges</sci:legalval>
						<sci:legalval>Perform OPS Analysis</sci:legalval>
						<sci:legalval selected="true">Validate Models</sci:legalval>
						<sci:legalval selected="true">Remove Uninformative Bins</sci:legalval>
						<sci:legalval>Ignore Uninformative Bins</sci:legalval>
						<sci:legalval selected="true">Equipopulate Bins</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingeprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingeprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
						<sci:member>Numeric Scaling</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval selected="true">Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
						<sci:legalval>Mahalanobis</sci:legalval>
						<sci:legalval>One Minus Correlation</sci:legalval>
						<sci:legalval>One Minus Squared Correlation</sci:legalval>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval>Tanimoto</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
						<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
						<sci:legalval>Correct for Missing Values</sci:legalval>
					</sci:arg>
					<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval selected="true">Tanimoto</sci:legalval>
						<sci:legalval>Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>WhenFinished</sci:member>
						<sci:member>DestinationFolder</sci:member>
						<sci:member>Post-Processing Script</sci:member>
						<sci:member>NumberOfBins</sci:member>
					</sci:arg>
					<sci:arg name="NumberOfBins" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>When subdividing continuous variables, the number of initial bins to divide them into</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="WhenFinished" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies what the learner should do when finished building the model. Options are:
&lt;ul&gt;
&lt;li&gt;Nothing: Do nothing.
&lt;li&gt;DisplayMessage: Display a dialog telling you that the model has been built.
&lt;li&gt;ShowStatisticsTable: Show a table in Excel of the model&apos;s parameters and various statistical measures.
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Nothing</sci:legalval>
						<sci:legalval>DisplayMessage</sci:legalval>
						<sci:legalval>ShowStatisticsTable</sci:legalval>
					</sci:arg>
					<sci:arg name="DestinationFolder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The folder into which the model should be registered</sci:help>
						<sci:value>$(Username)/LearnedProperties</sci:value>
					</sci:arg>
					<sci:arg name="Post-Processing Script" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>An optional PilotScript expression that is applied to the learned model after
it is built.  This can be used, for example, to set defaults or help text.</sci:help>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.</sci:help>
					</sci:arg>
					<sci:arg name="Old Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 22 08:27:07 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{22699AB0-7583-4062-976F-46E680B2CBFF}</sci:value>
					</sci:arg>
					<sci:arg name="DuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication exists in the training set</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="GoodDuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication of the good sample exists in the training set (on top of any duplication already declared using DuplicationEstimate)</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="DecorrelationType" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The type of runtime decorrelation to perform</sci:help>
						<sci:legalval selected="true">NoDecorrelation</sci:legalval>
						<sci:legalval>MostPositiveFeature</sci:legalval>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>LEARNNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Version" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2682 -820</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds a two-class Laplacian-modified Bayesian categorization model</sci:value>
						<sci:value>The model distinguishes &quot;good&quot; data records from &quot;bad&quot; records. (Here &quot;good&quot; and &quot;bad&quot; are arbitrary labels to distinguish two classes of samples.) The name of the model is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;, and the new model is stored as a component in the LearnedProperties folder of your user tab. &lt;/p&gt;

&lt;P&gt;&lt;I&gt;TestForGood&lt;/I&gt; is a PilotScript expression you specify that returns True when a given sample is a member of the &quot;good&quot; class.&lt;/P&gt;

&lt;P&gt;The properties used to build the model may be numerical, fingerprint, or textual descriptors. &lt;I&gt;UseProperties&lt;/I&gt; specifies the descriptors to use.

&lt;P&gt;The learned model component predicts a property whose name is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;. The property value is a score indicating the relative likelihood of a sample being in the &quot;good&quot; class. Positive values which is the same as the name of the component. As a calculable property, the property can be calculated &quot;on-the-fly&quot; using only the name in PilotScript and in the parameters of many components. &lt;/P&gt;

&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn 
    Good Molecules:&lt;/a&gt; Performs a similar analysis on molecular data records 
    using molecular properties.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{6E0971E2-1096-48C0-9A7A-7051B124E191}&apos;)&quot;&gt;Learn 
    Property:&lt;/a&gt; Creates a model of a continuous variable (regression model) rather than a classification model.&lt;/li&gt;
&lt;li&gt;For additional learning methods for both regression and classification problems, see the learners in the Advanced Data Modeling and R Statistics component collections. For example, use &lt;a href=&quot;javascript:DoLink(&apos;{40F9E147-1D71-4141-A274-6E845F79E158}&apos;)&quot;&gt;Learn RP Tree Model&lt;/a&gt; to build a recursive partitioning classification model for either a binary or multi-category property. Use &lt;a href=&quot;javascript:DoLink(&apos;{3B00C062-5352-4211-9258-7D3242D16076}&apos;)&quot;&gt;Learn GFA Model&lt;/a&gt; to create a population of regression models based on optimal subsets of the descriptors you specify. Use &lt;a href=&quot;javascript:DoLink(&apos;{8750BDE8-DE7C-4985-89E9-B6D99255BD81}&apos;)&quot;&gt;Learn R Support Vector Machine Model&lt;/a&gt; to build a cross-validated, parameter-optimized regression or classification model using the SVM method.
&lt;li&gt;To evaluate the built model against a test set of data, use the &lt;a href=&quot;javascript:DoLink(&apos;{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}&apos;)&quot;&gt;ROC Plot Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>3050 -870 391 134</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>full_model</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="New Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>126</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Analysis and Statistics\Data Modeling\Learners\Learn Good From Bad</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:value>/home/accelrys/smb-share/PIPELINE_PILOT_SHARED/gerard/text_mining_chembl/revised/chembl17_training_set.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
						<sci:value>50000</sci:value>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PerceiveChemistryNodesFromSGroups</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the MDL CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the MDL CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the MDL CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the MDL SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the MDL sketchers. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt; 
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an MDL SD format file.) For molecules saved in MDL format, this information only contains information that cannot be written out in MDL SD format.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PerceiveChemistryNodesFromSGroups" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If SGroups are present in the input data, the SGroups are scanned for groups that signify that the input data could be represented as a Chemistry Node.  Examples of these groups are MIX, FOR, COP and MON for mixtures, formulations, copolymers and monomers, respectively.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\Direct\Direct_templates.mol</sci:value>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the MDL CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Sep 08 16:06:50 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Chembl</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MDL MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related MDL format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.2.300</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>43</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Rename Property" version="2">
					<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Property name to change</sci:help>
						<sci:value>pubmed_id</sci:value>
					</sci:arg>
					<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the new property</sci:help>
						<sci:value>id</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>Rename</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Rename Property</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Renames a property</sci:value>
						<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.0.46</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>32</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>a := title.&apos; &apos;.abstract;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>concatenate title and abstract</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>31</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>50</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{9790B166-4698-460B-9B5C-0E7A599EC32A}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>54</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>59</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>set := &apos;good&apos;;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>set := &apos;good&apos;;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>60</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2106 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>117</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
						<sci:value>500</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>localhost</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>*</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>prepare FPs</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SUBPROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2394 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.9.0.30</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>119</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.CalculateStringFP.1">
						<sci:component name="Simple String Fingerprint" version="2">
							<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the string property</sci:help>
								<sci:value>a</sci:value>
							</sci:arg>
							<sci:arg name="ProcessTextInto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>What to process the incoming text into.  If Words, then the whitespace characters are used to separate the words of the text.  If Characters, then the text is chopped up into sequences of characters.</sci:help>
								<sci:legalval selected="true">Words</sci:legalval>
								<sci:legalval>Characters</sci:legalval>
							</sci:arg>
							<sci:arg name="MaximumLength" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>If the text is being processed into words, this is the maximum number of words in a phrase.  If the text is being processed into character strings, then this is the maximum length of the strings that will be generated.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>WhitespaceCharacters</sci:member>
								<sci:member>IgnoreCharacters</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>TreatEndsAsWhitespace</sci:member>
							</sci:arg>
							<sci:arg name="WhitespaceCharacters" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>This is the set of whitespace characters. When the incoming text is processed, all of these characters are converted into the same whitespace character; then, multiple whitespace characters in a row are squeezed into a single whitespace character.  If the text is being processed into Words, then the whitespaces become the separation points for the words. &quot;\t&quot; means tab; &quot;\n&quot; means carriage return.</sci:help>
								<sci:value>-; .:\t\n,()[]{}&lt;&gt;!@#$%^&amp;*+\\/&quot;?</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreCharacters" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>This is the list of characters to ignore.  They are erased from the incoming text.</sci:help>
								<sci:value>_0123456789&apos;</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to ignore letter case in comparisons.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="TreatEndsAsWhitespace" type="BoolType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Whether to treat the start and the end of the text as an occurrance of whitespace.
If true, then a whitespace character is added to the beginning and end of the text.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Oct 23 10:43:03 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Simple String Fingerprint</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Simple String Fingerprint</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{775EF965-41EC-4258-BB4C-964B082EAE10}</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates a fingerprint from a string property</sci:value>
								<sci:value>This is a prototype component for constructing very simple string fingerprints. For more sophisticated text analysis, see the components in the Text Analytics collection.
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Prototypes\Simple String Fingerprint</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">7.5.1.2</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>#list := property(&apos;SFP#a#W+-#I--&apos;);
resize(#newlist,0);

for #i in 1 .. numvalues(#list)
loop
	if strlength(#list[#i]) &gt; 4 then
		append(#newlist, #list[#i]);
	end if;
end loop;
b := #newlist;
/*contract(&apos; &apos;, b);*/
remove(&apos;SFP#a#W+-#I--&apos;);

</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>word length &gt; 4</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>402 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>#list := b;
resize(#newlist,0);

for #i in 1 .. numvalues(#list)
loop
	#a := rsubst(#list[#i],&apos;ies$&apos;, &apos;y&apos;);
	#a := rsubst(#a,&apos;s$&apos;, &apos;&apos;);
	#a := rsubst(#a,&apos;([stldflmnpr])ed$&apos;, &apos;$1&apos;);
	#a := rsubst(#a,&apos;([stldflmnpr])e$&apos;, &apos;$1&apos;);
	#a := rsubst(#a,&apos;ing$&apos;, &apos;&apos;);
	#a := rsubst(#a,&apos;ly$&apos;, &apos;&apos;);
	
	append(#newlist, #a);
end loop;
bow := #newlist;
/*contract(&apos; &apos;, b);*/
remove(&apos;b&apos;);
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>stemming</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>738 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>#list := bow;
resize(#newlist,0);

for #i in 1 .. numvalues(#list)
loop
	if strlength(#list[#i]) &gt; 4 then
		append(#newlist, #list[#i]);
	end if;
end loop;
remove(&apos;bow&apos;);
bow := #newlist;
/*contract(&apos; &apos;, b);*/


</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>word length &gt; 4</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1050 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>19</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateStringFP.1">
						<sci:component name="Simple String Fingerprint" version="2">
							<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the string property</sci:help>
								<sci:value>bow</sci:value>
							</sci:arg>
							<sci:arg name="ProcessTextInto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>What to process the incoming text into.  If Words, then the whitespace characters are used to separate the words of the text.  If Characters, then the text is chopped up into sequences of characters.</sci:help>
								<sci:legalval selected="true">Words</sci:legalval>
								<sci:legalval>Characters</sci:legalval>
							</sci:arg>
							<sci:arg name="MaximumLength" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>If the text is being processed into words, this is the maximum number of words in a phrase.  If the text is being processed into character strings, then this is the maximum length of the strings that will be generated.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>WhitespaceCharacters</sci:member>
								<sci:member>IgnoreCharacters</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>TreatEndsAsWhitespace</sci:member>
							</sci:arg>
							<sci:arg name="WhitespaceCharacters" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>This is the set of whitespace characters. When the incoming text is processed, all of these characters are converted into the same whitespace character; then, multiple whitespace characters in a row are squeezed into a single whitespace character.  If the text is being processed into Words, then the whitespaces become the separation points for the words. &quot;\t&quot; means tab; &quot;\n&quot; means carriage return.</sci:help>
								<sci:value>; .:\t\n,()[]{}&lt;&gt;!@#$%^&amp;*+\\/&quot;?</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreCharacters" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>This is the list of characters to ignore.  They are erased from the incoming text.</sci:help>
								<sci:value>-_0123456789&apos;</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to ignore letter case in comparisons.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="TreatEndsAsWhitespace" type="BoolType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Whether to treat the start and the end of the text as an occurrance of whitespace.
If true, then a whitespace character is added to the beginning and end of the text.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Oct 23 10:43:03 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Simple String Fingerprint</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Simple String Fingerprint</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{775EF965-41EC-4258-BB4C-964B082EAE10}</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1362 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates a fingerprint from a string property</sci:value>
								<sci:value>This is a prototype component for constructing very simple string fingerprints. For more sophisticated text analysis, see the components in the Text Analytics collection.
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Prototypes\Simple String Fingerprint</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">7.5.1.2</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>bow</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 07 13:23:27 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1674 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.31</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Property" version="2">
							<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Property name to change</sci:help>
								<sci:value>SFP#bow</sci:value>
							</sci:arg>
							<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the new property</sci:help>
								<sci:value>bow</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Rename</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Rename Property</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1986 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Renames a property</sci:value>
								<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Data to Fail Port" version="2">
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FilterNode</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Data to Fail Port</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1794 -370</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
								<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic Data</sci:value>
								<sci:value>All data records</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.0.4.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>Comma-separated list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>id,bow, set</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu May 22 15:46:56 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Keep Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>714 -520</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;RenameList&lt;/i&gt; if you wish to change the names of the retained properties.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.1.100</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SeparateValues.1">
						<sci:component name="Unmerge Data" version="2">
							<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
								<sci:value>bow</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Large Data Records</sci:member>
							</sci:arg>
							<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 27 15:13:59 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unmerge Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unmerge Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>GENERATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1050 -520</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
								<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Unmerge Data</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">6.0.0.44</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from Cache" version="2">
							<sci:arg name="JoinUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the property that identifies which records to join. When a record in the cache has the same value for this property as the incoming streaming data record, its properties and child nodes are added to the streaming record. Calculable properties can be used for the streaming data, but data in the cache must already contain stored properties to join.

</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>BoW</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
								<sci:member>Scope</sci:member>
								<sci:value>stopwords</sci:value>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;
			</sci:help>
								<sci:legalval>Job Only</sci:legalval>
								<sci:legalval selected="true">User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences between the property lists are resolved.  
By default, the streaming input data (process data) serves as the base for a join and the cache data (reference data) is treated as the joining data (this distinction can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: Joins each of the matching records in the cache with the streaming record individually and independently, which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval>JoinAll</sci:legalval>
								<sci:legalval selected="true">JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to pass on to the reader</sci:help>
								<sci:value>Scope</sci:value>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
								<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:value>$(CacheID)</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval>MDL SD Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
								<sci:legalval selected="true">Cache Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Dec 12 15:15:31 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Join Data from Cache</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1410 -520</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by &lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By default, this component expects the cache to have been created by the current job.  If the cache is outside the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no data was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.27</sci:value>
							</sci:arg>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Join Data from Cache</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Merge Data" version="2">
							<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>MergePropertyType</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:value>id</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">IsNumeric</sci:legalval>
								<sci:legalval>IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
								<sci:legalval>IsFingerprint</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
								<sci:member>WhenMerging</sci:member>
								<sci:member>KeepAllNullString</sci:member>
								<sci:member>KeepAllPreferredNodeName</sci:member>
								<sci:member>PrefixUsingProperty</sci:member>
								<sci:member>Data Are Sorted</sci:member>
								<sci:legalval selected="true">KeepAll</sci:legalval>
								<sci:legalval>KeepFirst</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>Molecule</sci:value>
							</sci:arg>
							<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
							</sci:arg>
							<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Mar 15 13:01:38 2011</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1770 -670</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
								<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that contain the properties being used for merging</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the properties being used for merging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.4.5.20</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Merge Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Hash_to_word := BoW;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Hash_to_word := BoW;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2130 -670</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>21</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.ConvertFingerprint.1">
						<sci:component name="Convert Fingerprint" version="2">
							<sci:arg name="Property Name" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the property that will contain the source fingerprint information</sci:help>
								<sci:member>Input Format</sci:member>
								<sci:value>bow</sci:value>
							</sci:arg>
							<sci:arg name="Input Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The expected format of the input property. Available formats are:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Bitset&lt;/b&gt;: a bitset or a list of on bits as text, such as &quot;3 4 5&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Binary String&lt;/b&gt;: a string such as &quot;0010011&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Hex String&lt;/b&gt;: a string such as &quot;3FD54FF&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Array of Bits&lt;/b&gt;: an array of zeros and ones.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Array of Counts&lt;/b&gt;: an array of zeros and counts.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Base64&lt;/b&gt;: a Base64-encoded string of bits.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Daylight Base64&lt;/b&gt;: a Daylight Base64-encoded string of bits.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;List of Integer Bits&lt;/b&gt; (&lt;i&gt;SciTegic fingerprint format&lt;/i&gt;): an array of the &quot;on&quot; bits.&lt;/li&gt; 
&lt;li&gt;&lt;b&gt;List of Floating-Point Bits&lt;/b&gt;: an array of floating-point numbers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;List of String Bits&lt;/b&gt;: an array of strings.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>Fixed-Length Bitset</sci:legalval>
								<sci:legalval>Fixed-Length Binary String</sci:legalval>
								<sci:legalval>Fixed-Length Hex String</sci:legalval>
								<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
								<sci:legalval>Fixed-Length Array of Counts</sci:legalval>
								<sci:legalval>Fixed-Length Base64</sci:legalval>
								<sci:legalval>Fixed-Length Daylight Base64</sci:legalval>
								<sci:legalval>List of Integer Bits</sci:legalval>
								<sci:legalval>List of Floating-Point Bits</sci:legalval>
								<sci:legalval selected="true">List of String Bits</sci:legalval>
							</sci:arg>
							<sci:arg name="Output Property Name" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the property to save the converted fingerprint into. If left blank, the input property will be overwritten.</sci:help>
								<sci:member>Output Fixed Length</sci:member>
								<sci:member>Output Bit Order</sci:member>
								<sci:member>Output Format</sci:member>
							</sci:arg>
							<sci:arg name="Output Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The desired format for the output property. Available formats are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Bitset&lt;/b&gt;: a bitset or a list of on bits as text, such as &quot;3 4 5&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Binary String&lt;/b&gt;: a string such as &quot;0010011&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Hex String&lt;/b&gt;: a string such as &quot;3FD54FF&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Array of Bits&lt;/b&gt;: an array of zeros and ones.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Array of Counts&lt;/b&gt;: an array of zeros and counts.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Base64&lt;/b&gt;: a Base64-encoded string of bits.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Fixed-Length Daylight Base64&lt;/b&gt;: a Daylight Base64-encoded string of bits.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;List of Integer Bits&lt;/b&gt; (&lt;i&gt;SciTegic fingerprint format&lt;/i&gt;): an array of the &quot;on&quot; bits.&lt;/li&gt; 
&lt;li&gt;&lt;b&gt;List of Floating-Point Bits&lt;/b&gt;: an array of floating-point numbers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;List of String Bits&lt;/b&gt;: an array of strings.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>Fixed-Length Bitset</sci:legalval>
								<sci:legalval>Fixed-Length Binary String</sci:legalval>
								<sci:legalval>Fixed-Length Hex String</sci:legalval>
								<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
								<sci:legalval>Fixed-Length Array of Counts</sci:legalval>
								<sci:legalval>Fixed-Length Base64</sci:legalval>
								<sci:legalval>Fixed-Length Daylight Base64</sci:legalval>
								<sci:legalval selected="true">List of Integer Bits</sci:legalval>
								<sci:legalval>List of Floating-Point Bits</sci:legalval>
								<sci:legalval>List of String Bits</sci:legalval>
							</sci:arg>
							<sci:arg name="Output Fixed Length" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>If the output format is fixed-length, you can specify that length.  If the input format is NOT fixed-length, then you MUST specify the length if the output is fixed-length.</sci:help>
								<sci:enabledscript>findsubstring(Parameter(&apos;Output Format&apos;), &apos;Fixed-Length&apos;) &gt; 0</sci:enabledscript>
								<sci:value>128</sci:value>
							</sci:arg>
							<sci:arg name="Output Bit Order" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>
We store the bits in a byte using the least-significant bit first.  If you wish the most-significant bit to 
be first, you can do that here.  

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;  
&lt;ul&gt;&lt;li&gt;Once you convert once, you do not need to do it again later.
&lt;/li&gt;&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Pack Least-Significant First</sci:legalval>
								<sci:legalval>Pack Most-Significant First</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Feb 21 11:31:32 2011</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Convert Fingerprint</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{88776655-E6CC-49BD-82DA-EBBA9B98C905}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2466 -670</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Converts a fingerprint property from one format to another</sci:value>
								<sci:value>&lt;p&gt;Converts fingerprints from one format to another.  This is useful for preparing externally-generated fingerprints for use in Pipeline Pilot.  In that case, you should convert the fingerprints to a useful internal format, such as &lt;i&gt;List of Integer Bits&lt;/i&gt;. (The format for SciTegic fingerprints such as FCFP_6 and MDLPublicKeys is &lt;i&gt;List of Integer Bits&lt;/i&gt;).&lt;/p&gt;

&lt;p&gt;You can also use this to prepare fingerprints for export to external programs.  For example, you may want to convert the fingerprints to a &lt;i&gt;Fixed-Length Array of Bits&lt;/i&gt;, which creates an array of a given size, each element either 0 or 1.&lt;/p&gt;

&lt;p&gt;When fingerprints are shrunk in size, the shrinkage is done by &lt;i&gt;folding&lt;/i&gt; the bits using a mathematical modulo (&quot;mod&quot;) operation.  Folding fingerprints generally results in a loss of information.  That is, it is possible for two non-duplicate bits to become duplicates after folding is performed.&lt;/p&gt;
</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value>Data Record with one property containing fingerprint data</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value>Data Record with one property containing fingerprint data and a new property containing the converted fungerprint.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Convert Fingerprint</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.4.5.17</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Chemistry\Data Access and Manipulation\Manipulators\Convert Fingerprint</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="1" to="2" type="true"/>
					<sci:connectid from="2" to="19" type="true"/>
					<sci:connectid from="19" to="3" type="true"/>
					<sci:connectid from="3" to="4" type="true"/>
					<sci:connectid from="4" to="5" type="true"/>
					<sci:connectid from="5" to="6" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
					<sci:connectid from="7" to="8" type="true"/>
					<sci:connectid from="8" to="11" type="true"/>
					<sci:connectid from="8" to="9" type="false"/>
					<sci:connectid from="9" to="21" type="true"/>
					<sci:connectid from="21" to="10" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Learn Good From Bad" version="2">
					<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
						<sci:value>chembl-likeness_bow_17_70</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:help>A Boolean PilotScript expression that is used to distinguish the &quot;good&quot; samples from the &quot;bad&quot; (baseline) samples. The expression should be True for each &quot;good&quot; sample and False for all others.</sci:help>
						<sci:value>set eq &apos;good&apos;</sci:value>
					</sci:arg>
					<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
</sci:help>
						<sci:member>UserSet</sci:member>
						<sci:member>IgnoreProperties</sci:member>
						<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
						<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
						<sci:legalval selected="true">UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;
If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined
on the first data record, then all properties in that range are included.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
						<sci:value>bow</sci:value>
					</sci:arg>
					<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. 

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;li&gt;Validate Models: Computes leave-one-out cross-validation statistics and add this information to the model component help.

&lt;li&gt;Remove Uninformative Bins: Removes bins that make only a small contribution to the model score (smaller in magnitude than 0.05). This decreases the amount of disk space required to save the model component.

&lt;li&gt;Ignore Uninformative Bins: Retains bins that make only a small contribution to the model score, but ignore these bins when making predictions. Scores obtained with this option are identical to those with &quot;remove Uninformative Bins&quot;, but retaining the extra information allows formerly uninformative bins to become informative when adding new data to the model with &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;.

&lt;li&gt;Equipopulate Bins: Subdivides continuous variables so that each bin contains roughly the same number of samples.

&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The Bayesian method used by this learner is highly efficient and can create a model from even hundreds of thousands of data records in a short time. By contrast, the PCA calculation required by the &quot;Perform OPS Analysis&quot; option is much slower and can increase the learning time by an order of magnitude or more for a large training set. It is best to use this option by re-training from the same data set &lt;i&gt;after&lt;/i&gt; you have validated a model built with this learner and have decided to keep the model for later use.

&lt;li&gt;For models created by this learner, it is not strictly necessary to specify &quot;Save Training Properties&quot; in order to extend the model with new data using &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;. However, if you wish to obtain cross-validation statistics for the extended model, you must save the training properties.

&lt;li&gt;If you select the &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; option and wish to track the features of a fingerprint property in addition to categorical property values, then perform the following steps: Right-click the model component and select &quot;Edit...&quot;. Add a new parameter named &quot;Model Domain Fingerprint&quot;. A message alerts you that a duplicate parameter was found. Click the Yes button to re-use the parameter. Click OK on the dialog. Then enter the name of your fingerprint property as the value of &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Model Domain Fingerprint</sci:member>
						<sci:member>Numeric Distance Function</sci:member>
						<sci:member>Fingerprint Distance Function</sci:member>
						<sci:member>Additional Properties</sci:member>
						<sci:legalval>Save Training Properties</sci:legalval>
						<sci:legalval>Encrypt Data</sci:legalval>
						<sci:legalval>Track Property Ranges</sci:legalval>
						<sci:legalval>Perform OPS Analysis</sci:legalval>
						<sci:legalval selected="true">Validate Models</sci:legalval>
						<sci:legalval selected="true">Remove Uninformative Bins</sci:legalval>
						<sci:legalval>Ignore Uninformative Bins</sci:legalval>
						<sci:legalval selected="true">Equipopulate Bins</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingeprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingeprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
						<sci:member>Numeric Scaling</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval selected="true">Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
						<sci:legalval>Mahalanobis</sci:legalval>
						<sci:legalval>One Minus Correlation</sci:legalval>
						<sci:legalval>One Minus Squared Correlation</sci:legalval>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval>Tanimoto</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
						<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
						<sci:legalval>Correct for Missing Values</sci:legalval>
					</sci:arg>
					<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval selected="true">Tanimoto</sci:legalval>
						<sci:legalval>Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>WhenFinished</sci:member>
						<sci:member>DestinationFolder</sci:member>
						<sci:member>Post-Processing Script</sci:member>
						<sci:member>NumberOfBins</sci:member>
					</sci:arg>
					<sci:arg name="NumberOfBins" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>When subdividing continuous variables, the number of initial bins to divide them into</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="WhenFinished" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies what the learner should do when finished building the model. Options are:
&lt;ul&gt;
&lt;li&gt;Nothing: Do nothing.
&lt;li&gt;DisplayMessage: Display a dialog telling you that the model has been built.
&lt;li&gt;ShowStatisticsTable: Show a table in Excel of the model&apos;s parameters and various statistical measures.
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Nothing</sci:legalval>
						<sci:legalval>DisplayMessage</sci:legalval>
						<sci:legalval>ShowStatisticsTable</sci:legalval>
					</sci:arg>
					<sci:arg name="DestinationFolder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The folder into which the model should be registered</sci:help>
						<sci:value>$(Username)/LearnedProperties</sci:value>
					</sci:arg>
					<sci:arg name="Post-Processing Script" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>An optional PilotScript expression that is applied to the learned model after
it is built.  This can be used, for example, to set defaults or help text.</sci:help>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.</sci:help>
					</sci:arg>
					<sci:arg name="Old Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 22 08:27:07 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{22699AB0-7583-4062-976F-46E680B2CBFF}</sci:value>
					</sci:arg>
					<sci:arg name="DuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication exists in the training set</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="GoodDuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication of the good sample exists in the training set (on top of any duplication already declared using DuplicationEstimate)</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="DecorrelationType" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The type of runtime decorrelation to perform</sci:help>
						<sci:legalval selected="true">NoDecorrelation</sci:legalval>
						<sci:legalval>MostPositiveFeature</sci:legalval>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>LEARNNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Version" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2970 -1170</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds a two-class Laplacian-modified Bayesian categorization model</sci:value>
						<sci:value>The model distinguishes &quot;good&quot; data records from &quot;bad&quot; records. (Here &quot;good&quot; and &quot;bad&quot; are arbitrary labels to distinguish two classes of samples.) The name of the model is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;, and the new model is stored as a component in the LearnedProperties folder of your user tab. &lt;/p&gt;

&lt;P&gt;&lt;I&gt;TestForGood&lt;/I&gt; is a PilotScript expression you specify that returns True when a given sample is a member of the &quot;good&quot; class.&lt;/P&gt;

&lt;P&gt;The properties used to build the model may be numerical, fingerprint, or textual descriptors. &lt;I&gt;UseProperties&lt;/I&gt; specifies the descriptors to use.

&lt;P&gt;The learned model component predicts a property whose name is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;. The property value is a score indicating the relative likelihood of a sample being in the &quot;good&quot; class. Positive values which is the same as the name of the component. As a calculable property, the property can be calculated &quot;on-the-fly&quot; using only the name in PilotScript and in the parameters of many components. &lt;/P&gt;

&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn 
    Good Molecules:&lt;/a&gt; Performs a similar analysis on molecular data records 
    using molecular properties.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{6E0971E2-1096-48C0-9A7A-7051B124E191}&apos;)&quot;&gt;Learn 
    Property:&lt;/a&gt; Creates a model of a continuous variable (regression model) rather than a classification model.&lt;/li&gt;
&lt;li&gt;For additional learning methods for both regression and classification problems, see the learners in the Advanced Data Modeling and R Statistics component collections. For example, use &lt;a href=&quot;javascript:DoLink(&apos;{40F9E147-1D71-4141-A274-6E845F79E158}&apos;)&quot;&gt;Learn RP Tree Model&lt;/a&gt; to build a recursive partitioning classification model for either a binary or multi-category property. Use &lt;a href=&quot;javascript:DoLink(&apos;{3B00C062-5352-4211-9258-7D3242D16076}&apos;)&quot;&gt;Learn GFA Model&lt;/a&gt; to create a population of regression models based on optimal subsets of the descriptors you specify. Use &lt;a href=&quot;javascript:DoLink(&apos;{8750BDE8-DE7C-4985-89E9-B6D99255BD81}&apos;)&quot;&gt;Learn R Support Vector Machine Model&lt;/a&gt; to build a cross-validated, parameter-optimized regression or classification model using the SVM method.
&lt;li&gt;To evaluate the built model against a test set of data, use the &lt;a href=&quot;javascript:DoLink(&apos;{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}&apos;)&quot;&gt;ROC Plot Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>3194 -1170 391 177</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>70% model for external validation</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="New Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>39</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Analysis and Statistics\Data Modeling\Learners\Learn Good From Bad</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Random Percent Filter" version="2">
					<sci:arg name="Percent" type="DoubleType" required="true" visibility="visible" multi="false">
						<sci:help>Enter the percentage of records to pass as a number between 0.0 and 100.0.</sci:help>
						<sci:value>70</sci:value>
					</sci:arg>
					<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Random number generator seed. If left blank the current time in seconds is used as the seed.</sci:help>
						<sci:value>333</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Sets up the random seed.</sci:help>
						<sci:value>srand($(seed));</sci:value>
					</sci:arg>
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Defines how the random filtering is performed.</sci:help>
						<sci:value>rand() * 100 &lt; $(Percent);</sci:value>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Not used.</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Whether calculated properties are kept on the data property list.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Argument Description</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jun 01 10:08:01 2005</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Random Percent Filter</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B9AF5701-25F7-4492-984D-85BEBA2C704C}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Random Percent Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2682 -1345</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes a specified percentage of data records by random selection</sci:value>
						<sci:value>&lt;p&gt;Applies a probability, based on the &lt;i&gt;Percent&lt;/i&gt; value, which determines if a record should be passed. (Because the probability is applied to each record, the total percent of records sent out the Pass port may differ slightly from the actual &lt;i&gt;Percent&lt;/i&gt; value entered.) All remaining records are sent out the Fail port.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records which pass the random selection filter.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records which do not pass the random selection filter.</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>5.0.0.103</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>46</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Filters\Random Percent Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Writer" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Append</sci:member>
						<sci:member>Scope</sci:member>
						<sci:value>validation</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write to the cache.</sci:help>
					</sci:arg>
					<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
						<sci:member>JoinUsing</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:member>JoinUsingListType</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Write Globals</sci:member>
					</sci:arg>
					<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval selected="true">Writer</sci:legalval>
						<sci:legalval>Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 25 11:53:25 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2970 -1545</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.5</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>47</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Learn Good From Bad" version="2">
					<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
						<sci:value>chembl-likeness_bow_17_70_2</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:help>A Boolean PilotScript expression that is used to distinguish the &quot;good&quot; samples from the &quot;bad&quot; (baseline) samples. The expression should be True for each &quot;good&quot; sample and False for all others.</sci:help>
						<sci:value>set eq &apos;good&apos;</sci:value>
					</sci:arg>
					<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
</sci:help>
						<sci:member>UserSet</sci:member>
						<sci:member>IgnoreProperties</sci:member>
						<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
						<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
						<sci:legalval selected="true">UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;
If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined
on the first data record, then all properties in that range are included.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
						<sci:value>bow</sci:value>
					</sci:arg>
					<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. 

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;li&gt;Validate Models: Computes leave-one-out cross-validation statistics and add this information to the model component help.

&lt;li&gt;Remove Uninformative Bins: Removes bins that make only a small contribution to the model score (smaller in magnitude than 0.05). This decreases the amount of disk space required to save the model component.

&lt;li&gt;Ignore Uninformative Bins: Retains bins that make only a small contribution to the model score, but ignore these bins when making predictions. Scores obtained with this option are identical to those with &quot;remove Uninformative Bins&quot;, but retaining the extra information allows formerly uninformative bins to become informative when adding new data to the model with &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;.

&lt;li&gt;Equipopulate Bins: Subdivides continuous variables so that each bin contains roughly the same number of samples.

&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The Bayesian method used by this learner is highly efficient and can create a model from even hundreds of thousands of data records in a short time. By contrast, the PCA calculation required by the &quot;Perform OPS Analysis&quot; option is much slower and can increase the learning time by an order of magnitude or more for a large training set. It is best to use this option by re-training from the same data set &lt;i&gt;after&lt;/i&gt; you have validated a model built with this learner and have decided to keep the model for later use.

&lt;li&gt;For models created by this learner, it is not strictly necessary to specify &quot;Save Training Properties&quot; in order to extend the model with new data using &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;. However, if you wish to obtain cross-validation statistics for the extended model, you must save the training properties.

&lt;li&gt;If you select the &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; option and wish to track the features of a fingerprint property in addition to categorical property values, then perform the following steps: Right-click the model component and select &quot;Edit...&quot;. Add a new parameter named &quot;Model Domain Fingerprint&quot;. A message alerts you that a duplicate parameter was found. Click the Yes button to re-use the parameter. Click OK on the dialog. Then enter the name of your fingerprint property as the value of &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Model Domain Fingerprint</sci:member>
						<sci:member>Numeric Distance Function</sci:member>
						<sci:member>Fingerprint Distance Function</sci:member>
						<sci:member>Additional Properties</sci:member>
						<sci:legalval>Save Training Properties</sci:legalval>
						<sci:legalval>Encrypt Data</sci:legalval>
						<sci:legalval>Track Property Ranges</sci:legalval>
						<sci:legalval>Perform OPS Analysis</sci:legalval>
						<sci:legalval selected="true">Validate Models</sci:legalval>
						<sci:legalval selected="true">Remove Uninformative Bins</sci:legalval>
						<sci:legalval>Ignore Uninformative Bins</sci:legalval>
						<sci:legalval selected="true">Equipopulate Bins</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingeprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingeprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
						<sci:member>Numeric Scaling</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval selected="true">Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
						<sci:legalval>Mahalanobis</sci:legalval>
						<sci:legalval>One Minus Correlation</sci:legalval>
						<sci:legalval>One Minus Squared Correlation</sci:legalval>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval>Tanimoto</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
						<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
						<sci:legalval>Correct for Missing Values</sci:legalval>
					</sci:arg>
					<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval selected="true">Tanimoto</sci:legalval>
						<sci:legalval>Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>WhenFinished</sci:member>
						<sci:member>DestinationFolder</sci:member>
						<sci:member>Post-Processing Script</sci:member>
						<sci:member>NumberOfBins</sci:member>
					</sci:arg>
					<sci:arg name="NumberOfBins" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>When subdividing continuous variables, the number of initial bins to divide them into</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="WhenFinished" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies what the learner should do when finished building the model. Options are:
&lt;ul&gt;
&lt;li&gt;Nothing: Do nothing.
&lt;li&gt;DisplayMessage: Display a dialog telling you that the model has been built.
&lt;li&gt;ShowStatisticsTable: Show a table in Excel of the model&apos;s parameters and various statistical measures.
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Nothing</sci:legalval>
						<sci:legalval>DisplayMessage</sci:legalval>
						<sci:legalval>ShowStatisticsTable</sci:legalval>
					</sci:arg>
					<sci:arg name="DestinationFolder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The folder into which the model should be registered</sci:help>
						<sci:value>$(Username)/LearnedProperties</sci:value>
					</sci:arg>
					<sci:arg name="Post-Processing Script" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>An optional PilotScript expression that is applied to the learned model after
it is built.  This can be used, for example, to set defaults or help text.</sci:help>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.</sci:help>
					</sci:arg>
					<sci:arg name="Old Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 22 08:27:07 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{22699AB0-7583-4062-976F-46E680B2CBFF}</sci:value>
					</sci:arg>
					<sci:arg name="DuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication exists in the training set</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="GoodDuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication of the good sample exists in the training set (on top of any duplication already declared using DuplicationEstimate)</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="DecorrelationType" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The type of runtime decorrelation to perform</sci:help>
						<sci:legalval selected="true">NoDecorrelation</sci:legalval>
						<sci:legalval>MostPositiveFeature</sci:legalval>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>LEARNNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Version" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2970 -1895</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds a two-class Laplacian-modified Bayesian categorization model</sci:value>
						<sci:value>The model distinguishes &quot;good&quot; data records from &quot;bad&quot; records. (Here &quot;good&quot; and &quot;bad&quot; are arbitrary labels to distinguish two classes of samples.) The name of the model is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;, and the new model is stored as a component in the LearnedProperties folder of your user tab. &lt;/p&gt;

&lt;P&gt;&lt;I&gt;TestForGood&lt;/I&gt; is a PilotScript expression you specify that returns True when a given sample is a member of the &quot;good&quot; class.&lt;/P&gt;

&lt;P&gt;The properties used to build the model may be numerical, fingerprint, or textual descriptors. &lt;I&gt;UseProperties&lt;/I&gt; specifies the descriptors to use.

&lt;P&gt;The learned model component predicts a property whose name is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;. The property value is a score indicating the relative likelihood of a sample being in the &quot;good&quot; class. Positive values which is the same as the name of the component. As a calculable property, the property can be calculated &quot;on-the-fly&quot; using only the name in PilotScript and in the parameters of many components. &lt;/P&gt;

&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn 
    Good Molecules:&lt;/a&gt; Performs a similar analysis on molecular data records 
    using molecular properties.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{6E0971E2-1096-48C0-9A7A-7051B124E191}&apos;)&quot;&gt;Learn 
    Property:&lt;/a&gt; Creates a model of a continuous variable (regression model) rather than a classification model.&lt;/li&gt;
&lt;li&gt;For additional learning methods for both regression and classification problems, see the learners in the Advanced Data Modeling and R Statistics component collections. For example, use &lt;a href=&quot;javascript:DoLink(&apos;{40F9E147-1D71-4141-A274-6E845F79E158}&apos;)&quot;&gt;Learn RP Tree Model&lt;/a&gt; to build a recursive partitioning classification model for either a binary or multi-category property. Use &lt;a href=&quot;javascript:DoLink(&apos;{3B00C062-5352-4211-9258-7D3242D16076}&apos;)&quot;&gt;Learn GFA Model&lt;/a&gt; to create a population of regression models based on optimal subsets of the descriptors you specify. Use &lt;a href=&quot;javascript:DoLink(&apos;{8750BDE8-DE7C-4985-89E9-B6D99255BD81}&apos;)&quot;&gt;Learn R Support Vector Machine Model&lt;/a&gt; to build a cross-validated, parameter-optimized regression or classification model using the SVM method.
&lt;li&gt;To evaluate the built model against a test set of data, use the &lt;a href=&quot;javascript:DoLink(&apos;{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}&apos;)&quot;&gt;ROC Plot Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>3194 -1895 391 265</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>70% model for second external validation (different seed)</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="New Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>131</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Analysis and Statistics\Data Modeling\Learners\Learn Good From Bad</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Random Percent Filter" version="2">
					<sci:arg name="Percent" type="DoubleType" required="true" visibility="visible" multi="false">
						<sci:help>Enter the percentage of records to pass as a number between 0.0 and 100.0.</sci:help>
						<sci:value>70</sci:value>
					</sci:arg>
					<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Random number generator seed. If left blank the current time in seconds is used as the seed.</sci:help>
						<sci:value>666</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Sets up the random seed.</sci:help>
						<sci:value>srand($(seed));</sci:value>
					</sci:arg>
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Defines how the random filtering is performed.</sci:help>
						<sci:value>rand() * 100 &lt; $(Percent);</sci:value>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Not used.</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Whether calculated properties are kept on the data property list.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Argument Description</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jun 01 10:08:01 2005</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Random Percent Filter</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B9AF5701-25F7-4492-984D-85BEBA2C704C}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Random Percent Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2682 -2070</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes a specified percentage of data records by random selection</sci:value>
						<sci:value>&lt;p&gt;Applies a probability, based on the &lt;i&gt;Percent&lt;/i&gt; value, which determines if a record should be passed. (Because the probability is applied to each record, the total percent of records sent out the Pass port may differ slightly from the actual &lt;i&gt;Percent&lt;/i&gt; value entered.) All remaining records are sent out the Fail port.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records which pass the random selection filter.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records which do not pass the random selection filter.</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>5.0.0.103</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>129</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Filters\Random Percent Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Writer" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Append</sci:member>
						<sci:member>Scope</sci:member>
						<sci:value>validation2</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write to the cache.</sci:help>
					</sci:arg>
					<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
						<sci:member>JoinUsing</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:member>JoinUsingListType</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Write Globals</sci:member>
					</sci:arg>
					<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval selected="true">Writer</sci:legalval>
						<sci:legalval>Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 25 11:53:25 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2970 -2245</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.5</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>130</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:value>/home/accelrys/smb-share/PIPELINE_PILOT_SHARED/gerard/text_mining_chembl/revised/medline_training_set.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PerceiveChemistryNodesFromSGroups</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the MDL CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the MDL CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the MDL CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the MDL SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the MDL sketchers. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt; 
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an MDL SD format file.) For molecules saved in MDL format, this information only contains information that cannot be written out in MDL SD format.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PerceiveChemistryNodesFromSGroups" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If SGroups are present in the input data, the SGroups are scanned for groups that signify that the input data could be represented as a Chemistry Node.  Examples of these groups are MIX, FOR, COP and MON for mixtures, formulations, copolymers and monomers, respectively.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\Direct\Direct_templates.mol</sci:value>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the MDL CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Sep 08 16:06:50 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Medline</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MDL MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related MDL format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.2.300</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>45</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.JoinProperties.1">
				<sci:component name="Join Data from File" version="2">
					<sci:arg name="JoinUsing" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the property that identifies which records to join. When a record in the source file has the same value for this property as the incoming streaming data record, its properties and child nodes are added to the streaming record. Calculable properties can be used for the streaming data, but data in the source file must already contain stored properties to join.


</sci:help>
						<sci:member>JoinUsingListType</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:value>PUBMED_ID</sci:value>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The data type of the join property</sci:help>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;JoinUsing&quot; propety values</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Names of data files or a learned model, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
						<sci:member>SourceFormat</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:value>/home/accelrys/smb-share/PIPELINE_PILOT_SHARED/gerard/text_mining_chembl/revised/chembl17_training_set.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="SourceFormat" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)
&lt;p&gt;
Note: When SourceFormat is a format with no column names, you must use property names of the form &quot;Column1&quot;, &quot;Column2&quot;, etc. in the JoinUsing parameter.</sci:help>
						<sci:legalval>Delimited Text With Column Names</sci:legalval>
						<sci:legalval>Delimited Text No Column Names</sci:legalval>
						<sci:legalval>Comma Delimited With Column Names</sci:legalval>
						<sci:legalval>Tab Delimited With Column Names</sci:legalval>
						<sci:legalval>Space Delimited With Column Names</sci:legalval>
						<sci:legalval>Excel XLS With Column Names</sci:legalval>
						<sci:legalval>Excel XLS No Column Names</sci:legalval>
						<sci:legalval selected="true">MDL SD Format</sci:legalval>
						<sci:legalval>SYBYL Mol2 Format</sci:legalval>
						<sci:legalval>Learned Model Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
					</sci:arg>
					<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:member>JoinOnto</sci:member>
						<sci:member>WhenJoiningOnto</sci:member>
						<sci:member>JoinAllNullString</sci:member>
						<sci:member>MultipleReferenceBehavior</sci:member>
						<sci:member>AppendNodes</sci:member>
					</sci:arg>
					<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the source file copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the source file remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">ProcessData</sci:legalval>
						<sci:legalval>Reference</sci:legalval>
					</sci:arg>
					<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences between the property lists are resolved.  
By default, the streaming input data (process data) serves as the base for a join and the source file data (reference data) is treated as the joining data (this distinction can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;

</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval selected="true">AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
						<sci:legalval>GroupData</sci:legalval>
					</sci:arg>
					<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;What to do if there are multiple records in the source file (reference data) with a matching value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: Joins each of the matching records in the source file with the streaming record individually and independently, which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
						<sci:legalval>JoinFirst</sci:legalval>
						<sci:legalval>JoinLast</sci:legalval>
						<sci:legalval>JoinAll</sci:legalval>
						<sci:legalval selected="true">JoinTogether</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Note&lt;/b&gt;: Missing values for a property in a delimited text file are represented as empty strings rather than null values.  These empty strings will act as placeholders in arrays but will not be replaced by the JoinAllNullString.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
						<sci:value>None</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Prefix</sci:member>
						<sci:member>UseIndexFile</sci:member>
						<sci:member>GroupName</sci:member>
					</sci:arg>
					<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
					</sci:arg>
					<sci:arg name="UseIndexFile" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>An index file speeds up subsequent access to the same join source file. The options are:

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;None:&lt;/B&gt; Do not create or use an index file&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Next to Source:&lt;/B&gt; Create or use an index file that is next to your source file, with &quot;.idx&quot; appended to the filename&lt;/li&gt;
&lt;li&gt;&lt;b&gt;In User Directory:&lt;/B&gt; Create an index file that other processes by the same user can access. (This is in directory $(UserDir)/JoinIndices.)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;In System Directory:&lt;/B&gt; Create an index file that all users can access. (This is in directory $(SciTegicRoot)/JoinIndices.)&lt;/li&gt;
&lt;/UL&gt;
</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval>Next to Source</sci:legalval>
						<sci:legalval selected="true">In User Directory</sci:legalval>
						<sci:legalval>In System Directory</sci:legalval>
					</sci:arg>
					<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If WhenJoiningOnto is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
						<sci:value>Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="UncompressZIPFiles" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Whether to uncompress ZIP files for speed</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Dec 14 13:24:09 2007</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{D24316C3-9D5C-4B5D-ADF3-28F258F11858}</sci:value>
					</sci:arg>
					<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
						<sci:help>Name of the data format of the Source file</sci:help>
						<sci:value>$(SourceFormat)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>remove papers already in chembl</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Join Data from File</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>JOINNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Augments data records with properties from data in a file when specified property values match</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by &lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records from &lt;i&gt;Source&lt;/i&gt;.  Properties from these records are added to the incoming data record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the file.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By default this component expects the source file to be delimited text with column names.  If the file is of a different format, you should change &lt;i&gt;SourceFormat&lt;/i&gt; accordingly.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; to join against a data cache created using the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records which match at least one record in the source file.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which no match was found in the source file.</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.28</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>58</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Join Data from File</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Rename Property" version="2">
					<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Property name to change</sci:help>
						<sci:value>pubmed_id</sci:value>
					</sci:arg>
					<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the new property</sci:help>
						<sci:value>id</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>Rename</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Rename Property</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Renames a property</sci:value>
						<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.0.46</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>36</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>a := title.&apos; &apos;.abstract;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>concatenate title and abstract</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>37</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Randomize Property Order" version="2">
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Randomize records</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SUBPROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{46F9069C-580E-074C-4D50-30248CBF6293}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.5.0.200</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>gerardvw</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Apr 22 15:20:53 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>49</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>gerardvw\Own Components\Randomize Property Order</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Random Number" version="2">
							<sci:arg name="Output" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Indicates the name of the property to
receive the randomly generated number</sci:help>
								<sci:legalval type="DoubleType" selected="true">RandomNumber</sci:legalval>
							</sci:arg>
							<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>A user-specified number to initialize the random number generation the first time.  Leave this blank if you would like to get a different random series each time you run the protocol.</sci:help>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Set up the random number seed.</sci:help>
								<sci:value>srand($(seed));</sci:value>
							</sci:arg>
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>The calculation of the random number.</sci:help>
								<sci:value>%&apos;$(Output)&apos; := Rand();
TRUE;</sci:value>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Not used.</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Add any properties calculated in this component to a molecule&apos;s property list</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Argument Description</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Oct 30 19:41:39 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Random Number</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>RandomNumber</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0BD882F6-F202-42E0-8DE4-2463C2B2207B}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Generates a random number</sci:value>
								<sci:value>A random number, uniformly distributed in the range [0, 1), is calculated for each record and assigned to a property named &lt;b&gt;RandomNumber&lt;/b&gt;. To get a different sequence of random numbers, change &lt;i&gt;Seed&lt;/i&gt;.  To get a different sequence of random numbers each time you run the protocol, leave &lt;i&gt;Seed&lt;/i&gt; blank.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records with the random number property added</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Random Number</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">6.0.1.5</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.SortData.1">
						<sci:component name="Sort Data" version="2">
							<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
								<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
								<sci:member>Property 1</sci:member>
								<sci:member>Property 2</sci:member>
								<sci:member>Property 3</sci:member>
							</sci:arg>
							<sci:arg name="Property 1" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The property to sort by.</sci:help>
								<sci:member>Property 1 Sort Order</sci:member>
								<sci:member>Property 1 Sort As</sci:member>
								<sci:value>RandomNumber</sci:value>
							</sci:arg>
							<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to sort in ascending or descending order.</sci:help>
								<sci:legalval selected="true">Ascending</sci:legalval>
								<sci:legalval>Descending</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Numbers</sci:legalval>
								<sci:legalval>Text</sci:legalval>
								<sci:legalval>Case Sensitive Text</sci:legalval>
								<sci:legalval>Text Containing Numbers</sci:legalval>
								<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
								<sci:legalval>Dates</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 2" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The property to sort by.</sci:help>
								<sci:member>Property 2 Sort Order</sci:member>
								<sci:member>Property 2 Sort As</sci:member>
							</sci:arg>
							<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort in ascending or descending order.</sci:help>
								<sci:legalval selected="true">Ascending</sci:legalval>
								<sci:legalval>Descending</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Numbers</sci:legalval>
								<sci:legalval>Text</sci:legalval>
								<sci:legalval>Case Sensitive Text</sci:legalval>
								<sci:legalval>Text Containing Numbers</sci:legalval>
								<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
								<sci:legalval>Dates</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 3" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The property to sort by.</sci:help>
								<sci:member>Property 3 Sort Order</sci:member>
								<sci:member>Property 3 Sort As</sci:member>
							</sci:arg>
							<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort in ascending or descending order.</sci:help>
								<sci:legalval selected="true">Ascending</sci:legalval>
								<sci:legalval>Descending</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Numbers</sci:legalval>
								<sci:legalval>Text</sci:legalval>
								<sci:legalval>Case Sensitive Text</sci:legalval>
								<sci:legalval>Text Containing Numbers</sci:legalval>
								<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
								<sci:legalval>Dates</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Nov 11 11:11:11 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sorts data records according to one or more properties</sci:value>
								<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records in sorted order</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the sort field(s)</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.5.2.500</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Sort Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>RandomNumber</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 07 13:23:27 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.31</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="1" to="2" type="true"/>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.RangeScreen.1">
				<sci:component name="Range Filter" version="2">
					<sci:arg name="List" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>A list of which data records to pass:
  e.g.,  1,3-5,7,10-11
     will pass the first, third, fourth, fifth and so on.</sci:help>
						<sci:value>1 - 47939</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>keep identical amount to training set</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0C71D911-BF35-4A1B-8B2C-B9A586BD39F3}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Range Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records within a specified range based on the order in which they arrive</sci:value>
						<sci:value>&lt;p&gt;Data records are numbered consecutively (from 1) as they arrive at the component.  The record numbers specified by &lt;i&gt;List&lt;/i&gt; are sent out the Pass port. Records not specified are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;List&lt;/i&gt; items need to be entered as comma-separated values. &lt;i&gt;List&lt;/i&gt; can accept single item indices or ranges (such as &quot;1-5,7,9,13-15&quot;).&lt;/p&gt; 

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records whose indices match the specified list</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records whose indices do not match the specified list</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>53</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Filters\Range Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>set := &apos;bad&apos;;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>set := &apos;bad&apos;;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -2620</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>42</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.GenerateData.1">
				<sci:component name="Generate Empty Data" version="2">
					<sci:arg name="NumberToGenerate" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>The number of empty data records to generate</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Initialize Condition" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>PilotScript expression to initialize any values.  When run in mode &quot;After Each Process&quot; this expression is evaluated for each incoming data item.  When run in mode &quot;NoMoreData&quot; this expression is evaluated a single time.</sci:help>
						<sci:value>#Count := 0;
#MaxCount := $(NumberToGenerate);</sci:value>
					</sci:arg>
					<sci:arg name="Condition" type="ExpressionType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>PilotScript boolean expression which determines the conditions under which to continue to generate data.</sci:help>
						<sci:value>#Count++;
#Count &lt;= #MaxCount;</sci:value>
					</sci:arg>
					<sci:arg name="WhenToGenerate" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>When to generate the new data records:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;AfterEachProcess&lt;/i&gt; - Once for each incoming data record (i.e., after each process call).  This option causes each input data record to be duplicated (cloned) &lt;i&gt;NumberToGenerate&lt;/i&gt; times.
&lt;li&gt;&lt;i&gt;OnNoMoreData&lt;/i&gt; - Once all incoming data has passed through (or if none is ever expected).
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">OnNoMoreData</sci:legalval>
						<sci:legalval>AfterEachProcess</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessDataAction" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>Indicates fate of incoming data when &lt;i&gt;WhenToGenerate&lt;/i&gt; is set to OnNoMoreData:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;PassData&lt;/i&gt; - The data is sent out the Pass port
&lt;li&gt;&lt;i&gt;FailData&lt;/i&gt; - The data is sent out the Fail port
&lt;li&gt;&lt;i&gt;DeleteData&lt;/i&gt; - The data is deleted and not sent out any port
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenToGenerate to OnNoMoreData&apos;);
Parameter(&apos;WhenToGenerate&apos;) eq &apos;OnNoMoreData&apos;</sci:enabledscript>
						<sci:legalval selected="true">PassData</sci:legalval>
						<sci:legalval>FailData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Nov 10 15:47:05 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Generate Empty Data</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Generate Empty Data</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{ABC452F1-9E41-4A63-A8ED-744A13235DE6}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Generates empty data records</sci:value>
						<sci:value>&lt;p&gt;&lt;i&gt;NumberToGenerate&lt;/i&gt; specifies the number of empty records to generate.
&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.8</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>101</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\File Readers\Generate Empty Data</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>111</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>108</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>107</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>109</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>110</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Text" version="2">
					<sci:arg name="Text" type="TextExpressionType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A PilotScript expression that evaluates to the text to render in this object.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.  Also, you can provide text as static (quoted) strings.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;To specify a property name that includes whitespace characters, use the &lt;code&gt;property()&lt;/code&gt; PilotScript function, e.g., if the property name is &quot;Profit Margin&quot; use:&lt;p&gt;&lt;code&gt;property(&apos;Profit Margin&apos;)&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;When specifying columns for an in-line table, the expression you enter here (often simply a property name), will be the default column header.  To explicitly set the column header, use &lt;i&gt;Column Settings&lt;/i&gt; &amp;gt; &lt;i&gt;Header Text&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>Non-breaking Spaces</sci:member>
						<sci:member>Allow HTML Tags</sci:member>
						<sci:member>Array Value Display</sci:member>
						<sci:value>&quot;Chembl Likeness Validation&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Non-breaking Spaces" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, spaces will be output as non-breaking spaces in HTML and Word reports.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Allow HTML Tags" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, HTML tags are interpreted as HTML. In HTML reports, all tags are supported. PDF and Word reports support the following tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;BR&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;B&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;I&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;U&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;A HREF=&quot;xxx&quot; TITLE=&quot;yyy&quot; NAME=&quot;zzz&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;FONT STYLE=&quot;BACKGROUND-COLOR: xxx; COLOR: yyy; SIZE: zzz; FACE: vvv&quot;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
						<sci:legalval>First Value Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server. For example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available. Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link</sci:member>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
						<sci:member>Protocol Link</sci:member>
						<sci:member>Link Options</sci:member>
					</sci:arg>
					<sci:arg name="Link" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
						<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
						<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -2970</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTTEXTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{34E6C845-4ACB-4212-BBA3-7422213D458F}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Adds text to a report</sci:value>
						<sci:value>&lt;p&gt;The text can be supplied from any expression, or as a quoted string, and formatted with the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Text&lt;/i&gt; is a PilotScript expression that evaluates to the text to display.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Keep Properties" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>A comma-separated list of properties that are transferred from the input data record to the text object.  These properties can then be used to apply conditional formats in downstream components such as Columns.</sci:help>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.TextComponent</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
						<sci:value>Format</sci:value>
						<sci:value>Link Options</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>102</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Reporting and Visualization\Basic Reporting\Elements\Text</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Page" version="2">
					<sci:arg name="Orientation" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies how the document is positioned on the page. &quot;Portrait&quot; positions the print vertically; &quot;Landscape&quot; positionals it horizontally.</sci:help>
						<sci:legalval selected="true">Portrait</sci:legalval>
						<sci:legalval>Landscape</sci:legalval>
					</sci:arg>
					<sci:arg name="Page Size" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Determines the size and orientation of the pages in the report. You can select from a list of predefined paper sizes.  You can also select &quot;Custom&quot; and provide a custom paper size.

When set to &quot;Custom&quot;, the page may not have its width and height specified as a percentage.  Edit the Page&apos;s Position parameter, and in the Position dialog change the units for the Width and Height</sci:help>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>Note</sci:legalval>
						<sci:legalval>Legal</sci:legalval>
						<sci:legalval>A0</sci:legalval>
						<sci:legalval>A1</sci:legalval>
						<sci:legalval>A2</sci:legalval>
						<sci:legalval>A3</sci:legalval>
						<sci:legalval selected="true">A4</sci:legalval>
						<sci:legalval>A5</sci:legalval>
						<sci:legalval>A6</sci:legalval>
						<sci:legalval>A7</sci:legalval>
						<sci:legalval>A8</sci:legalval>
						<sci:legalval>A9</sci:legalval>
						<sci:legalval>A10</sci:legalval>
						<sci:legalval>B0</sci:legalval>
						<sci:legalval>B1</sci:legalval>
						<sci:legalval>B2</sci:legalval>
						<sci:legalval>B3</sci:legalval>
						<sci:legalval>B4</sci:legalval>
						<sci:legalval>B5</sci:legalval>
						<sci:legalval>Custom</sci:legalval>
					</sci:arg>
					<sci:arg name="Starting Page Number" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Where to start page numbering from.  Use the Auto Text component to add page numbers.  By default page numbering will begin at 1.</sci:help>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server. For example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available. Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Page</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Page</sci:value>
					</sci:arg>
					<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If True, all incoming data records are aggregated into a single output record. 

If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>HTML Attributes</sci:member>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.PageComponent</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 12 13:27:24 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Page</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2106 -2970</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{A28703A7-E701-4D34-9A93-1D24AC2039CC}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sets the size, orientation, and background formatting of reports</sci:value>
						<sci:value>&lt;p&gt;By default, PDF and Word reports are letter-size and use portrait orientation. Use this component to specify landscape orientation or to use a different page size.&lt;/p&gt;

&lt;p&gt;You can only use a Page component as input to a viewer or writer component.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Orientation&lt;/i&gt; sets up the layout as portrait or landscape.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Page size&lt;/i&gt; lets you select from many predefined paper sizes.  You can also select &quot;Custom&quot; and provide custom page sizes.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Starting page number&lt;/i&gt; lets you start page numbering at a number other than the number of pages that have been created. Use the Auto Text component to add page numbering.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use this component to set default font properties for an entire report (any components that do not explicitly set their own formatting will inherit the defaults).&lt;/li&gt;
  &lt;li&gt;Any background image will be placed in the top left corner of the page and repeated horizontally and vertically across the entire page.&lt;/li&gt;
  &lt;li&gt;Backgrounds, borders, margins, and padding are supported in HTML, but not page size or orientation, which is determined by the user&apos;s browser.&lt;/li&gt;
  &lt;li&gt;Only the first page component piped into an HTML Report Writer will have any effect.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Reporting opjects to be put into a page layout.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the page is sent to the pass port.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>105</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Reporting and Visualization\Basic Reporting\Elements\Page</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="PDF Report Viewer" version="2">
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional setting for the PDF file that is used as part of the document&apos;s properties in Adobe Reader (File &gt; Document Properties &gt; Description). The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Open With" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Determines whether the PDF report is opened in Adobe Reader or Internet Explorer. Reports created with form components should be viewed in Internet Explorer, because the free version of Adobe Reader does not allow form submission.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Adobe Reader</sci:legalval>
						<sci:legalval>Internet Explorer</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath,ClientFilePath,stmp</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jun 09 17:34:11 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>PDF Report Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTVIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{D08AFDC5-0CBE-4787-97AF-77A43B6646DA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2394 -2970</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in PDF format in Adobe Reader or Internet Explorer</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as a PDF file in Adobe Reader or Internet Explorer.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Reports created with form components should be viewed in Internet Explorer, because the free version of Adobe Reader does not allow form submission.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;</sci:value>
						<sci:value>Generic Data</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.13</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Reporting and Visualization\Basic Reporting\Viewers\PDF Report Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Reader" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
						<sci:member>RangeMinimum</sci:member>
						<sci:member>RangeMaximum</sci:member>
						<sci:member>Scope</sci:member>
						<sci:member>JobId</sci:member>
						<sci:value>validation</sci:value>
					</sci:arg>
					<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, then delete the cache when finished reading</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Read Globals</sci:member>
					</sci:arg>
					<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
						<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval>Writer</sci:legalval>
						<sci:legalval selected="true">Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 25 19:09:54 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Cache Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -3320</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data records from a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.5</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>48</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -3320</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>50 -3695 1080 310</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>After training make sure to include component : chembl-likeness_bow_17_70 

On this component also enable predctions in the output
</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>128</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>property(&apos;chembl-likeness_bow_17_70#prediction&apos;) is defined</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>property(&apos;chembl-likeness_bow_</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -3320</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>62</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Rename Property" version="2">
					<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Property name to change</sci:help>
						<sci:value>chembl-likeness_bow_17_70#prediction</sci:value>
					</sci:arg>
					<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the new property</sci:help>
						<sci:value>chembl_like</sci:value>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>Rename</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Rename Property</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -3320</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Renames a property</sci:value>
						<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.0.46</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>61</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -3320</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>63</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>	IF chembl_like = &apos;true&apos; then model := &apos;good&apos;;
	ELSIF chembl_like = &apos;false&apos; then model := &apos;bad&apos;;
END IF;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>IF chembl_like = &apos;true&apos; then m</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -3320</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>66</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Classification Validation" version="2">
					<sci:arg name="Model" type="StringType" required="true" visibility="visible" multi="false">
						<sci:value>model</sci:value>
					</sci:arg>
					<sci:arg name="Measured" type="StringType" required="true" visibility="visible" multi="false">
						<sci:value>set</sci:value>
					</sci:arg>
					<sci:arg name="Activity Classes" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Inactive Class</sci:member>
						<sci:member>Active Class</sci:member>
					</sci:arg>
					<sci:arg name="Active Class" type="StringType" required="true" visibility="visible" multi="false">
						<sci:value>Good</sci:value>
					</sci:arg>
					<sci:arg name="Inactive Class" type="StringType" required="true" visibility="visible" multi="false">
						<sci:value>Bad</sci:value>
					</sci:arg>
					<sci:arg name="Plot" type="StringType" required="false" visibility="visible" multi="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Output_Records" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Component Comment</sci:help>
						<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
					</sci:arg>
					<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Component Usage</sci:help>
						<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Classification Validation</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol ShowComment</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Add Protocol Comment Here</sci:help>
						<sci:value>Add Protocol Comment Here</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTVIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6399FBDB-32F3-CC25-969E-D9C1D3EEA98E}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -3320</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.5.0.200</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>gerardvw</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Jan 31 14:33:30 2013</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>56</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\ChEMBL\Classification Validation</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>$(plot) == True</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Plot</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>3546 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>39</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>3834 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>51</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Subprotocol 2</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>4122 -95</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.9.0.30</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>37</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="No-op" version="2">
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>No-op</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>114 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
										<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.1</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@parameters[1] := Matthews;
@parameters[2] := Sensitivity;
@parameters[3] := Specificity;
@parameters[4] := PPV;
@parameters[5] := NPV;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
										<sci:value>Resize(@parameters, 5);</sci:value>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>@parameters[1] := Matthews;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>474 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.GenerateData.1">
								<sci:component name="Generate Empty Data" version="2">
									<sci:arg name="NumberToGenerate" type="LongType" required="true" visibility="visible" multi="false">
										<sci:help>The number of empty data records to generate</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Initialize Condition" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>PilotScript expression to initialize any values.  When run in mode &quot;After Each Process&quot; this expression is evaluated for each incoming data item.  When run in mode &quot;NoMoreData&quot; this expression is evaluated a single time.</sci:help>
										<sci:value>#Count := 0;
#MaxCount := $(NumberToGenerate);</sci:value>
									</sci:arg>
									<sci:arg name="Condition" type="ExpressionType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>PilotScript boolean expression which determines the conditions under which to continue to generate data.</sci:help>
										<sci:value>#Count++;
#Count &lt;= #MaxCount;</sci:value>
									</sci:arg>
									<sci:arg name="WhenToGenerate" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>When to generate the new data records:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;AfterEachProcess&lt;/i&gt; - Once for each incoming data record (i.e., after each process call).  This option causes each input data record to be duplicated (cloned) &lt;i&gt;NumberToGenerate&lt;/i&gt; times.
&lt;li&gt;&lt;i&gt;OnNoMoreData&lt;/i&gt; - Once all incoming data has passed through (or if none is ever expected).
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">OnNoMoreData</sci:legalval>
										<sci:legalval>AfterEachProcess</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessDataAction" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>Indicates fate of incoming data when &lt;i&gt;WhenToGenerate&lt;/i&gt; is set to OnNoMoreData:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;PassData&lt;/i&gt; - The data is sent out the Pass port
&lt;li&gt;&lt;i&gt;FailData&lt;/i&gt; - The data is sent out the Fail port
&lt;li&gt;&lt;i&gt;DeleteData&lt;/i&gt; - The data is deleted and not sent out any port
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenToGenerate to OnNoMoreData&apos;);
Parameter(&apos;WhenToGenerate&apos;) eq &apos;OnNoMoreData&apos;</sci:enabledscript>
										<sci:legalval selected="true">PassData</sci:legalval>
										<sci:legalval>FailData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Nov 10 15:47:05 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Generate Empty Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Generate Empty Data</sci:value>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DOCUMENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{ABC452F1-9E41-4A63-A8ED-744A13235DE6}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>114 -395</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Generates empty data records</sci:value>
										<sci:value>&lt;p&gt;&lt;i&gt;NumberToGenerate&lt;/i&gt; specifies the number of empty records to generate.
&lt;/p&gt;</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.8</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Components\Data Access and Manipulation\File Readers\Generate Empty Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#cntgz += 1;

Correlation_parameter := @names[#cntgz];
Correlation_value := @parameters[#cntgz];</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
										<sci:value>#cntgz := 0;
Resize(@names, 5);
@names[1] := &apos;MCC&apos;;
@names[2] := &apos;Sensitivity&apos;;
@names[3] := &apos;Specificity&apos;;
@names[4] := &apos;PPV&apos;;
@names[5] := &apos;NPV&apos;;</sci:value>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>#cntgz += 1;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>450 -395</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ComponentJavaPlugin.1">
								<sci:component name="Bar Chart" version="2">
									<sci:arg name="Chart Data" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Defines groups of data series for the chart. Use this parameter to add, remove and reorder data series in the chart.</sci:help>
										<sci:member>Data Series 1</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Settings for the data series to be plotted&lt;/p&gt;</sci:help>
										<sci:member>Data Series 1 Links and Actions</sci:member>
										<sci:member>Data Series 1 Bars and Lines</sci:member>
										<sci:member>Data Series 1 Data Options</sci:member>
										<sci:member>Data Series 1 X Property</sci:member>
										<sci:member>Data Series 1 Y Property</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 X Property" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the X axis.</sci:help>
										<sci:value>Correlation_parameter</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Y Property" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the Y axis. Multiple Y properties can be supplied with a comma-delimited list of property names.</sci:help>
										<sci:value>Correlation_value</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Various data options for the data series.</sci:help>
										<sci:member>Data Series 1 Data Options Error Bar</sci:member>
										<sci:member>Data Series 1 Data Options Y Axis for Plot</sci:member>
										<sci:member>Data Series 1 Data Options Label</sci:member>
										<sci:member>Data Series 1 Data Options Legend Text</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Error Bar" type="ExpressionType" required="false" visibility="visible" multi="false">
										<sci:help>Optional parameter that is a property or a PilotScript expression with values that describe the magnitude of error bars shown on individual bars. Any calculable properties must be calculated upstream.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;In case of stacked bar chart the length of the error bar is proportional to the sum of all the errors of the different bars in the stack.

&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Y Axis for Plot" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Select which Y axis to plot against (Y Axis or Second Y Axis).</sci:help>
										<sci:legalval selected="true">Y Axis</sci:legalval>
										<sci:legalval>Second Y Axis</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Label" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>The name of a property on the data stream or a PilotScript expression evaluating to a string that will be displayed as a label next to each bar in the chart.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Legend Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Text to be displayed in the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains a single entry, the specified string is used as the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains multiple entries then this parameter should contain a comma-separated list of strings to be used as legends. If this parameter is left blank, or the number of comma-separated strings is less than the number of &lt;i&gt;Y Property&lt;/i&gt; entries then a default legend text will be supplied.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Bars and Lines" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Options to describe the appearance of bars and lines.</sci:help>
										<sci:member>Data Series 1 Bars and Lines Color</sci:member>
										<sci:member>Data Series 1 Bars and Lines Fill Pattern</sci:member>
										<sci:member>Data Series 1 Bars and Lines Plot Type</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Bars and Lines Plot Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Whether to display this data series as bars,  symbols and lines or symbols only.</sci:help>
										<sci:legalval selected="true">Bars</sci:legalval>
										<sci:legalval>Symbols and Lines</sci:legalval>
										<sci:legalval>Symbols</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Bars and Lines Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color for this data series.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different color for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a color value or an expression defining a color.  There are three ways to specify colors for the property or expression:
&lt;ul&gt;&lt;li&gt;Strings, e.g., Red or Blue.&lt;/li&gt;
&lt;li&gt;RGB (reg-green-blue) color values (as hexadecimal values), prefixed with a &apos;#&apos; symbol.  For example, to specify the color Red, use &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Integer index values that correspond to the default order of colors from the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/default_color_table.htm&apos;)&quot;&gt;Default Color Table&lt;/a&gt;. For example, to specify Yellow, use 4 (i.e., Yellow is the fourth entry in the table).&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Bars and Lines Fill Pattern" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The fill pattern to use when displaying the data as bars.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;This option is currently not supported for the Flash charts.&lt;/li&gt;

&lt;li&gt;You can assign a different fill pattern for each bar by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a fill pattern value or an expression defining a fill pattern. A fill pattern can be one of the predefined strings:
&lt;ul&gt;&lt;li&gt;Solid&lt;/li&gt;
&lt;li&gt;Left Diagonal Hatching&lt;/li&gt;
&lt;li&gt;Right Diagonal Hatching&lt;/li&gt;
&lt;li&gt;Vertical Hatching&lt;/li&gt;
&lt;li&gt;Horizontal Hatching&lt;/li&gt;
&lt;li&gt;Cross Hatching&lt;/li&gt;
&lt;li&gt;Grid Hatching&lt;/li&gt;
&lt;li&gt;Brick Hatching&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval selected="true">Gradient</sci:legalval>
										<sci:legalval>Left Diagonal Hatching</sci:legalval>
										<sci:legalval>Right Diagonal Hatching</sci:legalval>
										<sci:legalval>Vertical Hatching</sci:legalval>
										<sci:legalval>Horizontal Hatching</sci:legalval>
										<sci:legalval>Cross Hatching</sci:legalval>
										<sci:legalval>Grid Hatching</sci:legalval>
										<sci:legalval>Brick Hatching</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Links and actions to be applied to this data series.</sci:help>
										<sci:member>Data Series 1 Links and Actions Protocol Link</sci:member>
										<sci:member>Data Series 1 Links and Actions Link</sci:member>
										<sci:member>Data Series 1 Links and Actions Tooltip</sci:member>
										<sci:member>Data Series 1 Links and Actions HTML Attributes</sci:member>
										<sci:member>Data Series 1 Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Link" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a link for each data point on the chart. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
 	&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>protocolLinkParameterName := StrReplace(ParameterName(), &quot;Actions Link&quot;, &quot;Actions Protocol Link&quot;);
enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol for each data element on the chart. Editing this parameter opens up the Protocol Link Dialog.
&lt;/p&gt;
&lt;p&gt;
Note: if &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>linkParameterName := StrReplace(ParameterName(), &quot;Protocol Link&quot;, &quot;Link&quot;);
enabled := Parameter(linkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to data points. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the data series.
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a string that will be displayed as a tooltip when the mouse hovers over a data point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same tooltip will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Defines attributes for one point on the chart. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same attributes will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies attributes to be applied to the whole chart.</sci:help>
										<sci:member>Chart Options Title</sci:member>
										<sci:member>Chart Options Format</sci:member>
										<sci:member>Chart Options Position</sci:member>
										<sci:member>Chart Options Chart Output</sci:member>
										<sci:member>Chart Options Display Options</sci:member>
										<sci:member>Chart Options Links and Actions</sci:member>
										<sci:member>Chart Options Display Type</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Title for the chart.&lt;/p&gt;</sci:help>
										<sci:value>$(Data Series 1 X Property) vs. $(Data Series 1 Y Property)</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Format" type="FormatType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options you can change include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server (for example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Background Color</sci:value>
										<sci:value>White</sci:value>
										<sci:value/>
										<sci:value>Style</sci:value>
										<sci:value>Chart.General</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Chart Options Position" type="PositionType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.General</sci:value>
										<sci:value>Width</sci:value>
										<sci:value>400.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>Height</sci:value>
										<sci:value>300.0</sci:value>
										<sci:value>Pixels</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the chart display format, a static image or an animated/non-animated shockwave Flash. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Pipeline Pilot Server Administration Portal is used.</sci:help>
										<sci:legalval selected="true">Default</sci:legalval>
										<sci:legalval>Image</sci:legalval>
										<sci:legalval>Flash - animated</sci:legalval>
										<sci:legalval>Flash - non-animated</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Chart Output" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Controls how data records are plotted in charts:
&lt;ul&gt;&lt;li&gt;If set to &quot;One Chart for All Data Records&quot; then all data records will be plotted in a single chart.&lt;/li&gt;
&lt;li&gt;If set to &quot;One Chart for Each Data Record&quot; then each data record will be plotted in a separate chart.  Use this when you want to create a chart for each row of a table.  Note that with the &quot;One Chart for Each Data Record&quot; setting, this applies to all Data Series specified including any non-array data series.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">One Chart for All Data Records</sci:legalval>
										<sci:legalval>One Chart for Each Data Record</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the whole chart.</sci:help>
										<sci:member>Chart Options Display Options Show Legend</sci:member>
										<sci:member>Chart Options Display Options Show Horizontal Gridlines</sci:member>
										<sci:member>Chart Options Display Options Plot Region Color</sci:member>
										<sci:member>Chart Options Display Options Plot Region Transparency</sci:member>
										<sci:member>Chart Options Display Options 2D or 3D</sci:member>
										<sci:member>Chart Options Display Options Plot Orientation</sci:member>
										<sci:member>Chart Options Display Options Bar Layout</sci:member>
										<sci:member>Chart Options Display Options Bar Width</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Display Options 2D or 3D" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Display as either 2-dimensional or 3-dimensional.</sci:help>
										<sci:enabledscript>DisplayTypeParameterName := StrReplace(ParameterName(), &quot;Display Options 2D or 3D&quot;, &quot;Display Type&quot;);
enabled := Parameter(DisplayTypeParameterName) Not EQ &apos;Image&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Chart Options Display Type is set to &quot;Flash&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">2-Dimensional</sci:legalval>
										<sci:legalval>3-Dimensional</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Sets the orientation of the bars in the chart, Horizontal or Vertical.</sci:help>
										<sci:legalval>Horizontal</sci:legalval>
										<sci:legalval selected="true">Vertical</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Bar Layout" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Describes how multiple Y properties are presented in a bar chart.  If &quot;Adjacent&quot; is selected, multiple bars for each X value are shown next to each other.  If &quot;Stacked&quot; is selected, the bars are shown stacked on top 
of each other.  


&lt;p&gt;In case of Adjacent layout, Error bars are shown for individual bars.  For Stacked layout, the Error bar is the sum of individual errors for each bar in the stack and is drawn only on the topmost bar in the stack.
</sci:help>
										<sci:legalval selected="true">Adjacent</sci:legalval>
										<sci:legalval>Stacked</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Bar Width" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Specify the width of the bars to plot.  This parameter is ignored if Plot Type is set to Symbols and Lines.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Legend" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Show/Hide the legend.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Horizontal Gridlines" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Show/Hide Horizontal Gridlines.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Apply a background color to the plot.</sci:help>
										<sci:value>White</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Region Transparency" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;A transparency for rendering the plot region. Legal values are between 0.0 (fully transparent) and 1.0 (fully opaque). The default is 1.0. 

&lt;p&gt;This options is not currently supported for PDF reports.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;The value has to be between 0.0 and 1.0&apos;);
Parameter() &gt;= 0.0 AND Parameter() &lt;= 1.0</sci:validscript>
										<sci:value>1.0</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:member>Chart Options Links and Actions Link</sci:member>
										<sci:member>Chart Options Links and Actions Link Target</sci:member>
										<sci:member>Chart Options Links and Actions HTML Attributes</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector</sci:member>
										<sci:member>Chart Options Links and Actions Protocol Link</sci:member>
										<sci:member>Chart Options Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
 	&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link Target" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
										<sci:member>Chart Options Links and Actions Data Connector Subscriber Event Handling</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector Publisher Event Handling</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector Publisher Subscriber Model</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
										<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
										<sci:legalval>Publisher</sci:legalval>
										<sci:legalval>Subscriber</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">Highlight</sci:legalval>
										<sci:legalval>Filter</sci:legalval>
										<sci:legalval>Reverse Filter</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">On Click</sci:legalval>
										<sci:legalval>On Mouse Over</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Attributes of the X axis.</sci:help>
										<sci:member>X Axis Label</sci:member>
										<sci:member>X Axis Label Format</sci:member>
										<sci:member>X Axis Label Orientation</sci:member>
										<sci:member>X Axis Show Tickmark Labels</sci:member>
										<sci:member>X Axis Line Color</sci:member>
										<sci:member>X Axis Show Axis</sci:member>
									</sci:arg>
									<sci:arg name="X Axis Label" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Label for the X axis.</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="X Axis Label Orientation" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The direction of print for the &lt;i&gt;X Axis&lt;/i&gt; labels (Horizontal, Diagonal, or Vertical)

&lt;i&gt;X Axis Label Orientation&lt;/i&gt; describes how to render the text of the &lt;i&gt;X Axis&lt;/i&gt;.  Longer text strings on the &lt;i&gt;X Axis&lt;/i&gt; often look better when drawn vertically or diagonally.</sci:help>
										<sci:legalval>Horizontal</sci:legalval>
										<sci:legalval selected="true">Diagonal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Show Tickmark Labels" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Show/Hide Tickmark labels.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies the color of the X axis line.</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Show Axis" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide X axis.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Attributes for the left Y axis</sci:help>
										<sci:member>Y Axis Minimum</sci:member>
										<sci:member>Y Axis Show Axis</sci:member>
										<sci:member>Y Axis Line Color</sci:member>
										<sci:member>Y Axis Label Format</sci:member>
										<sci:member>Y Axis Label</sci:member>
										<sci:member>Y Axis Scaling</sci:member>
										<sci:member>Y Axis Maximum</sci:member>
										<sci:member>Y Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for Y axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the Y axis.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Options for &lt;i&gt;Y Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
										<sci:member>Y Axis Tickmark Options Show Tickmark Labels</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Format</sci:member>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Show Tickmark Labels" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Show/Hide Tickmark labels.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the server&apos;s geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the server&apos;s geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) EQ &apos;DateTime&apos; OR Parameter(ValuesTypeParameterName) EQ &apos;Double&apos; OR Parameter(ValuesTypeParameterName) EQ &apos;Integer&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the Y axis line.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Show Axis" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Show/Hide the Y axis.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Attributes for the right Y axis</sci:help>
										<sci:member>Second Y Axis Minimum</sci:member>
										<sci:member>Second Y Axis Maximum</sci:member>
										<sci:member>Second Y Axis Scaling</sci:member>
										<sci:member>Second Y Axis Label</sci:member>
										<sci:member>Second Y Axis Label Format</sci:member>
										<sci:member>Second Y Axis Line Color</sci:member>
										<sci:member>Second Y Axis Show Axis</sci:member>
										<sci:member>Second Y Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="Second Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the right Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Second Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the right Y axis. If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Second Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Scaling for the right Y axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Label" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Label for the right Y axis.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Options for &lt;i&gt;Second Y Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>Second Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>Second Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
										<sci:member>Second Y Axis Tickmark Options Show Tickmark Labels</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Format</sci:member>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Show Tickmark Labels" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Show/Hide Tickmark labels.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Second Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the server&apos;s geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the server&apos;s geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) EQ &apos;DateTime&apos; OR Parameter(ValuesTypeParameterName) EQ &apos;Double&apos; OR Parameter(ValuesTypeParameterName) EQ &apos;Integer&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies the color of the right Y axis line.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Show Axis" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide the right Y axis.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
										<sci:member>Column Settings Header Text</sci:member>
										<sci:member>Column Settings Header Format</sci:member>
										<sci:member>Column Settings Header Position</sci:member>
										<sci:member>Column Settings Cell Format</sci:member>
										<sci:member>Column Settings Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>{4DE1D2E5-8558-4e65-9111-3105C7863339}</sci:value>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value> Bar Chart</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
										<sci:value>Chart Options Format</sci:value>
										<sci:value>Chart Options Links and Actions Link Options</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
										<sci:value>100</sci:value>
										<sci:value>Creates a bar chart for a report</sci:value>
										<sci:value>&lt;p&gt;Takes incoming data records and represents them as bars on a bar chart.  The categories, representing each bar, are specified by &lt;i&gt;X Property&lt;/i&gt; and the values for each bar are specified by &lt;i&gt;Y Property&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;To plot multiple datasets in a single chart, you can specify an &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; for &lt;i&gt;Data Series 1&lt;/i&gt; and &lt;i&gt;Data Series 2&lt;/i&gt;, etc.  This allows you to control formatting options individually for each data series.  Alternatively, you can enter multiple properties as a comma-separated list in &lt;i&gt;Y Property&lt;/i&gt; for a given Data Series.  In this case, the same formatting will be applied to each data property.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;i&gt;Data Series n&lt;/i&gt;: Specifies data properties and formatting options that control the particular data series.&lt;/li&gt;
  &lt;li&gt;&lt;i&gt;Chart Options&lt;/i&gt;: Options that control the whole chart, such as &lt;i&gt;Title&lt;/i&gt; and various &lt;i&gt;Display Options&lt;/i&gt;, including whether bars are placed adjacent or stacked, and in horizontal or vertical orientation.&lt;/li&gt;
  &lt;li&gt;&lt;i&gt;X Axis&lt;/i&gt;: Options that control the look and feel of the X Axis.&lt;/li&gt;
  &lt;li&gt;&lt;i&gt;Y Axis&lt;/i&gt;: Options that control the look and feel of the Y Axis.&lt;/li&gt;
  &lt;li&gt;&lt;i&gt;Second Y Axis&lt;/i&gt;: Options that control the look and feel of a second Y Axis, that appears, typically on the right-hand side of the chart, when any Data Series is specified to be plotted against it.&lt;/li&gt;
  &lt;li&gt;&lt;i&gt;Column Settings&lt;/i&gt;: Options to control how the chart appears inside a table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In &lt;i&gt;Chart Options&lt;/i&gt; &gt; &lt;i&gt;Chart Output&lt;/i&gt; you can set whether all data records are plotted in a single chart, or whether a separate chart is generated for each data record (e.g., to plot array data as a chart in each row of a table).  The data do not need to be array data to use this option.&lt;/li&gt;
  &lt;li&gt;To add additional Data Series, use &lt;i&gt;Chart Data&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt; 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>A data record representing the chart is sent to the pass port.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.4.5.21</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>REPORTCHARTNODE</sci:value>
									</sci:arg>
									<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>com.scitegic.report.component.chart.BarChartComponent</sci:value>
									</sci:arg>
									<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>762 -395</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Mar 16 15:58:39 2011</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Components\Reporting and Visualization\Basic Reporting\Charts\Bar Chart</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:connectid from="1" to="2" type="true"/>
							<sci:connectid from="3" to="4" type="true"/>
							<sci:connectid from="4" to="5" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.GenerateFrequency.1">
						<sci:component name="Generate Frequencies" version="2">
							<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property whose values will be collected
and their frequency of occurrence counted.</sci:help>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Sort</sci:member>
								<sci:member>Mode</sci:member>
							</sci:arg>
							<sci:arg name="Sort" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort the outputs as strings or numbers</sci:help>
								<sci:legalval selected="true">No</sci:legalval>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Mark the frequency continuously on each data record or collect the frequencies and output the final frequency for each property value at the end of processing. In either case, the output adds the property &quot;Frequency&quot; which contains the number of times that value was seen.
</sci:help>
								<sci:legalval>Continuous</sci:legalval>
								<sci:legalval selected="true">AtEnd</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 21 11:06:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DB96AC0A-54A4-46BD-99A7-F776C51F7F5D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Collects the frequency of occurrence of a given property&apos;s values.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>As the data records stream in, the frequency of occurrence for each value represented in the specified property (PropertyName) is counted. One property list data record for each value is generated with the specified property and a new property called &apos;Frequency&apos; containing the number of times that value was seen. By default, the incoming data records themselves are not passed through (AtEnd Mode).

If you set the advanced parameter Mode to Continuous, then the data is not sorted, but each incoming data record is passed through.  The value of the Frequency property is the number of samples with that value that have been seen so far.

Input             - Data records, which are not passed through
Output Pass  - Property list data records, one for each value</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the frequency of occurrence of each value for a specified property in the incoming data</sci:value>
								<sci:value>The property for which to calculate the frequencies is specified by &lt;i&gt;PropertyName&lt;/i&gt;. The input records are discarded.  An output record is generated for each unique property value.  Each output record contains two properties:
&lt;ul&gt;
&lt;li&gt;The property specified by &lt;i&gt;PropertyName&lt;/i&gt; containing the unique value.
&lt;li&gt;&lt;b&gt;Frequency&lt;/b&gt;, containing the number of times the value was seen.
&lt;/ul&gt;
&lt;p&gt;
The most common use of this component (&lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;AtEnd&lt;/i&gt;) is to calculate the frequency of each value for the specified property after all the incoming records have been seen. The incoming records are then discarded and the output consists of one data record for each different value of the analyzed property. Each data record contains two properties: the unique value and its frequency. &lt;i&gt;Sort&lt;/i&gt; controls whether or not to sort the data records by the unique property values.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When &lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;Continuous&lt;/i&gt; the incoming data records are not discarded. Instead, each data record is passed through with an additional property, &lt;b&gt;Frequency&lt;/b&gt;, containing the frequency of its value up to that point&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records, which are not passed through (unless Mode is set to &lt;I&gt;Continuous&lt;/I&gt;)</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>By default, one data record for each unique value of the property with its occurrence count</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Generate Frequencies</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SortData.1">
						<sci:component name="Sort Data" version="2">
							<sci:arg name="SortProperty1" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>First property to sort by</sci:help>
								<sci:member>SortDirection1</sci:member>
								<sci:member>SortAs1</sci:member>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="SortDirection1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval selected="true">AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty2" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Second property to sort by</sci:help>
								<sci:member>SortDirection2</sci:member>
								<sci:member>SortAs2</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty3" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Third property to sort by</sci:help>
								<sci:member>SortDirection3</sci:member>
								<sci:member>SortAs3</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty4" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fourth property to sort by</sci:help>
								<sci:member>SortDirection4</sci:member>
								<sci:member>SortAs4</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty5" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fifth property to sort by</sci:help>
								<sci:member>SortDirection5</sci:member>
								<sci:member>SortAs5</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty6" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Sixth property to sort by</sci:help>
								<sci:member>SortDirection6</sci:member>
								<sci:member>SortAs6</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Reorders the data records into a sorted order, depending on some property value.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>Incoming data records are held and sorted before being output in ascending or descending order of the named property.

Additional properties can be added to the sort by adding successive SortProperty, SortDirection, and SortAs parameters (i.e., SortProperty7, SortDirection7, and SortAs7, etc.).

Input             - Data records
Output Pass  - Data records (in sorted order).</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{E52CD4DE-1DAD-4AEA-A26D-5DEB4497365C}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sorts data records according to one or more properties
</sci:value>
								<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;To compare two records, the property values of &lt;i&gt;SortProperty1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;SortProperty2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;SortProperty3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The direction of sorting can be changed using &lt;i&gt;SortDirection&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records in sorted order</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the sort field(s)</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.1.1.400</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unknown</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Property" version="2">
							<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Property name to change</sci:help>
								<sci:value>Frequency</sci:value>
							</sci:arg>
							<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the new property</sci:help>
								<sci:value>True Positives</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Rename</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Renames a single property.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The component works for single properties as well as property arrays. 

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Rename Property</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Renames a property</sci:value>
								<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Passes all incoming records to the Pass port. Useful in subprotocols to capture the point of input. For example, to run an initialization pipeline before accepting input, use the No-Op component as the first component on the second pipeline.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>Pass all incoming records to pass port. Can be useful inside subprotocols with multiple input streams

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2106 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Merge Data" version="2">
							<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>MergePropertyType</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:
&lt;ul&gt;
&lt;li&gt;&quot;UseFirstDefinedValue&quot;: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
								<sci:legalval>IsFingerprint</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; property values.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
								<sci:member>WhenMerging</sci:member>
								<sci:member>KeepAllNullString</sci:member>
								<sci:member>KeepAllPreferredNodeName</sci:member>
								<sci:member>PrefixUsingProperty</sci:member>
								<sci:legalval selected="true">KeepAll</sci:legalval>
								<sci:legalval>KeepFirst</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>Molecule</sci:value>
							</sci:arg>
							<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
							</sci:arg>
							<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Nov 10 15:27:48 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Merges multiple data objects into one when they have the same value for a given property name.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>Incoming data records are merged into a single data record if they have the same value as each other for the &apos;MergeUsing&apos; named property(s).  (If multiple &apos;MergeUsing&apos; names are given, all must be identical for a merge event to occur.

&apos;MergeBehavior&apos; can be KeepAll, which keeps all values by appending any new ones; KeepFirst, which only keeps the properties of the first record found,  and KeepTogether, which keeps matching items sequentially together (like Sort).

&apos;IgnoreCase&apos; tells whether to ignore lettercase when comparing values as text.

&apos;OutputFrequency&apos; tells whether a property Frequency should be added to the merged output data, and containing the number of equivalent items found.

The properties of merged data records are appended in the form of an array. unless a &apos;PrefixUsingProperty&apos; is given, so the value of the given property is prepended to each property name on each data item.  This is often useful when merging multiple data files with a &apos;SourceTag&apos; parameter (available in many readers).

When records containing molecular structures are merged, only the molecular structure of the first record seen is retained in the final merged data record.

Input             - Data records
Output Pass  - Merged data records
Output Fail    - Data records which did not contain values for
                       the &apos;MergeUsing&apos; names

ADVANCED PROPERTIES

&apos;KeepAllNullString&apos;, if not equal to the word None, is a string that is used to pad the output values so that if N items are merged, all properties are arrays of length N. This keeps the property values in sync.

&apos;MergeUsingListType&apos; is by default ConcatenateValue, which means a concatenation of all the MergeUsing values is used to compare data records. UseFirstDefinedValue uses the first defined value in the MergeUsing list to compare the data.

&apos;MergePropertyType&apos; is by default IsText. To compare as numbers, use IsNumeric.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2394 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Merges properties of all data records that share the same key property value into a single data record
</sci:value>
								<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that contain the properties being used for merging</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the properties being used for merging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.8</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Merge Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Removes the specified properties from the property list.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to remove.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol ShowComment</sci:help>
								<sci:value>false</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Add Protocol Comment Here</sci:help>
								<sci:value>Add Protocol Comment Here</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2682 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>IF Property(&apos;True Positives&apos;) is defined 
	THEN Property(&apos;True Positives&apos;) := Property(&apos;True Positives&apos;);
	ELSE Property(&apos;True Positives&apos;) := 0;
END IF;

IF Property(&apos;False Positives&apos;) is defined 
	THEN Property(&apos;False Positives&apos;) := Property(&apos;False Positives&apos;);
	ELSE Property(&apos;False Positives&apos;) := 0;
END IF;

IF Property(&apos;True Negatives&apos;) is defined 
	THEN Property(&apos;True Negatives&apos;) := Property(&apos;True Negatives&apos;);
	ELSE Property(&apos;True Negatives&apos;) := 0;
END IF;

IF Property(&apos;False Negatives&apos;) is defined 
	THEN Property(&apos;False Negatives&apos;) := Property(&apos;False Negatives&apos;);
	ELSE Property(&apos;False Negatives&apos;) := 0;
END IF;
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Processes commands expressed in PilotScript syntax to apply rapid
manipulations to data record properties. In this way, the component may be
customized to build a new, specialized data manipulation component.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos;  is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2970 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.1.0.17</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Sensitivity := (property(&apos;True Positives&apos;) /(property(&apos;True Positives&apos;) + property(&apos;False Negatives&apos;)));
Specificity := (property(&apos;True Negatives&apos;) /(property(&apos;True negatives&apos;) + property(&apos;False Positives&apos;)));
PPV := (property(&apos;True Positives&apos;) /(property(&apos;True Positives&apos;) + property(&apos;False Positives&apos;)));
NPV := (property(&apos;True negatives&apos;) /(property(&apos;True negatives&apos;) + property(&apos;False Negatives&apos;)));
F := (2*(PPV*Sensitivity)/(PPV+Sensitivity));
Accuracy := (property(&apos;True Positives&apos;) + property(&apos;True negatives&apos;)) / (property(&apos;True Positives&apos;) + property(&apos;False Positives&apos;) + property(&apos;True negatives&apos;) + property(&apos;False Negatives&apos;));
Matthews := ((property(&apos;True Positives&apos;) * (property(&apos;True Negatives&apos;))- (property(&apos;False Positives&apos;) *  property(&apos;False Negatives&apos;)) ) / ( SQRT ( (property(&apos;True Positives&apos;) + property(&apos;False Positives&apos;))* (property(&apos;True Positives&apos;) + property(&apos;False Negatives&apos;)) * (property(&apos;True negatives&apos;) + property(&apos;False Positives&apos;)) * (property(&apos;True negatives&apos;) + property(&apos;False Negatives&apos;)))));
/*Model := &apos;$(model)&apos;;*/</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Processes commands expressed in PilotScript syntax to apply rapid
manipulations to data record properties. In this way, the component may be
customized to build a new, specialized data manipulation component.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos;  is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>3258 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.1.0.17</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Shaded Table" version="2">
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title at the top of the table.</sci:help>
								<sci:member>Title Format</sci:member>
								<sci:member>Title Position</sci:member>
							</sci:arg>
							<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options you can change include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server (for example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Title</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Title</sci:value>
							</sci:arg>
							<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
								<sci:member>Format</sci:member>
								<sci:member>Position</sci:member>
							</sci:arg>
							<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options you can change include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server (for example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.General</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.General</sci:value>
							</sci:arg>
							<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
								<sci:member>Header Format</sci:member>
								<sci:member>Header Position</sci:member>
								<sci:member>Show Table Header</sci:member>
								<sci:member>Freeze Table Header</sci:member>
							</sci:arg>
							<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether table headers should be visible or not.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options you can change include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server (for example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Header</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Header</sci:value>
							</sci:arg>
							<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
								<sci:member>Cell Format</sci:member>
								<sci:member>Cell Position</sci:member>
							</sci:arg>
							<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options you can change include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server (for example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Background Color</sci:value>
								<sci:value>Gainsboro</sci:value>
								<sci:value>(Index % 2) = 1</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Cell</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Cell</sci:value>
							</sci:arg>
							<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
								<sci:member>Exclude Properties</sci:member>
								<sci:member>Column Order</sci:member>
								<sci:member>Array Value Display</sci:member>
								<sci:member>When Data Contains Reporting Information</sci:member>
								<sci:member>Aggregate Data</sci:member>
							</sci:arg>
							<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-delimited list of properties which will not be rendered in an autogenerated table.</sci:help>
							</sci:arg>
							<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of property names, indicating the order the columns should appear in an autogenerated table. Any non-listed properties will be added as subsequent columns.</sci:help>
							</sci:arg>
							<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Determines how array values are separated when they are displayed in an autogenerated table.</sci:help>
								<sci:legalval>Separate By Commas</sci:legalval>
								<sci:legalval selected="true">Separate By Newlines</sci:legalval>
								<sci:legalval>One Array Element Per Cell</sci:legalval>
							</sci:arg>
							<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Determines whether the table shows all the properties of data records that already have reporting information.</sci:help>
								<sci:legalval selected="true">Display Reporting Information Only</sci:legalval>
								<sci:legalval>Display Reporting Information and All Properties</sci:legalval>
							</sci:arg>
							<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
								<sci:member>Link Target</sci:member>
								<sci:member>HTML Attributes</sci:member>
								<sci:member>Data Connector</sci:member>
								<sci:member>Tooltip</sci:member>
							</sci:arg>
							<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
							</sci:arg>
							<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>An optional tooltip for this reporting element.</sci:help>
							</sci:arg>
							<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
							</sci:arg>
							<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
								<sci:member>Subscriber Event Handling</sci:member>
								<sci:member>Publisher Event Handling</sci:member>
								<sci:member>Publisher Subscriber Model</sci:member>
							</sci:arg>
							<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
								<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
								<sci:legalval>Publisher</sci:legalval>
								<sci:legalval>Subscriber</sci:legalval>
								<sci:legalval>None</sci:legalval>
							</sci:arg>
							<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
								<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
								<sci:legalval selected="true">Highlight</sci:legalval>
								<sci:legalval>Filter</sci:legalval>
								<sci:legalval>Reverse Filter</sci:legalval>
							</sci:arg>
							<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
								<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
								<sci:legalval selected="true">On Click</sci:legalval>
								<sci:legalval>On Mouse Over</sci:legalval>
							</sci:arg>
							<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
								<sci:member>Column Settings Header Text</sci:member>
								<sci:member>Column Settings Header Format</sci:member>
								<sci:member>Column Settings Header Position</sci:member>
								<sci:member>Column Settings Cell Format</sci:member>
								<sci:member>Column Settings Cell Position</sci:member>
							</sci:arg>
							<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>When the network runs, processes once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>REPORTTABLENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{62F0D4E4-153D-4563-9CDF-E38E60581F2D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>4122 -470</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>38</sci:value>
							</sci:arg>
							<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
								<sci:value>Format</sci:value>
								<sci:value>Link Options</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a table where every other line is shaded</sci:value>
								<sci:value>&lt;p&gt;The shading colors can be changed by editing the &lt;i&gt;Cell Format&lt;/i&gt; parameter and modifying the values of the two background color values.&lt;/p&gt;

&lt;p&gt;The input to this component should be data records, not columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Raw data records with property values to tabulate.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>A data record representing the table is sent to the pass port.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.0.0.14</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Nov 01 17:47:58 2010</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Shaded Table</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Reporting and Visualization\Basic Reporting\Elements\Advanced\Shaded Table</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>$(Measured) =  &apos;$(Active Class)&apos;;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Allows you to filter using the result from a PilotScript expression. The expression you specify is evaluated for each incoming data record, and is evaluated to a True or False value. If multiple statements are present, then the value of the last statement is used.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos; is evaluated for each incoming data record.  The last statement in the expression evaluates to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port.

Input             - Data records
Output Pass  - Data records which evaluate &apos;true&apos;
Output Fail    - Data records which evaluate &apos;false&apos;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -645</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>

Sensitivity := format(&apos;%2.3f&apos;, Sensitivity);
Specificity := format(&apos;%2.3f&apos;, Specificity);
PPV := format(&apos;%2.3f&apos;, PPV);
NPV := format(&apos;%2.3f&apos;, NPV);
F := format(&apos;%2.3f&apos;, F);
Accuracy := format(&apos;%4.2f&apos;, Accuracy);
Matthews := format(&apos;%2.3f&apos;, Matthews);</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Processes commands expressed in PilotScript syntax to apply rapid
manipulations to data record properties. In this way, the component may be
customized to build a new, specialized data manipulation component.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos;  is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>3546 -645</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.1.0.17</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>29</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Removes the specified properties from the property list.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to remove.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol ShowComment</sci:help>
								<sci:value>false</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Add Protocol Comment Here</sci:help>
								<sci:value>Add Protocol Comment Here</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>3834 -645</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>$(Output_Records) == True</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Output_Records == True</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>4122 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>52</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>4410 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>53</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>remove (&apos;FCFP_4&apos;,&apos;MDLPublicKeys&apos;, &apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;,&apos;9&apos;,&apos;10&apos;,&apos;11&apos;,&apos;12&apos;,&apos;13&apos;,&apos;14&apos;,&apos;15&apos;,&apos;16&apos;,&apos;17&apos;,&apos;18&apos;,&apos;19&apos;,&apos;20&apos;,&apos;21&apos;,&apos;22&apos;,&apos;23&apos;,&apos;24&apos;,&apos;25&apos;,&apos;26&apos;,&apos;27&apos;,&apos;28&apos;,&apos;29&apos;);</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Processes commands expressed in PilotScript syntax to apply rapid
manipulations to data record properties. In this way, the component may be
customized to build a new, specialized data manipulation component.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos;  is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Redundant Properties</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.1.0.17</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>16</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>$(Model) = &apos;$(Active Class)&apos;;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Allows you to filter using the result from a PilotScript expression. The expression you specify is evaluated for each incoming data record, and is evaluated to a True or False value. If multiple statements are present, then the value of the last statement is used.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos; is evaluated for each incoming data record.  The last statement in the expression evaluates to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port.

Input             - Data records
Output Pass  - Data records which evaluate &apos;true&apos;
Output Fail    - Data records which evaluate &apos;false&apos;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>17</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.GenerateFrequency.1">
						<sci:component name="Generate Frequencies" version="2">
							<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property whose values will be collected
and their frequency of occurrence counted.</sci:help>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Sort</sci:member>
								<sci:member>Mode</sci:member>
							</sci:arg>
							<sci:arg name="Sort" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort the outputs as strings or numbers</sci:help>
								<sci:legalval selected="true">No</sci:legalval>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Mark the frequency continuously on each data record or collect the frequencies and output the final frequency for each property value at the end of processing. In either case, the output adds the property &quot;Frequency&quot; which contains the number of times that value was seen.
</sci:help>
								<sci:legalval>Continuous</sci:legalval>
								<sci:legalval selected="true">AtEnd</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 21 11:06:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DB96AC0A-54A4-46BD-99A7-F776C51F7F5D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Collects the frequency of occurrence of a given property&apos;s values.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>As the data records stream in, the frequency of occurrence for each value represented in the specified property (PropertyName) is counted. One property list data record for each value is generated with the specified property and a new property called &apos;Frequency&apos; containing the number of times that value was seen. By default, the incoming data records themselves are not passed through (AtEnd Mode).

If you set the advanced parameter Mode to Continuous, then the data is not sorted, but each incoming data record is passed through.  The value of the Frequency property is the number of samples with that value that have been seen so far.

Input             - Data records, which are not passed through
Output Pass  - Property list data records, one for each value</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the frequency of occurrence of each value for a specified property in the incoming data</sci:value>
								<sci:value>The property for which to calculate the frequencies is specified by &lt;i&gt;PropertyName&lt;/i&gt;. The input records are discarded.  An output record is generated for each unique property value.  Each output record contains two properties:
&lt;ul&gt;
&lt;li&gt;The property specified by &lt;i&gt;PropertyName&lt;/i&gt; containing the unique value.
&lt;li&gt;&lt;b&gt;Frequency&lt;/b&gt;, containing the number of times the value was seen.
&lt;/ul&gt;
&lt;p&gt;
The most common use of this component (&lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;AtEnd&lt;/i&gt;) is to calculate the frequency of each value for the specified property after all the incoming records have been seen. The incoming records are then discarded and the output consists of one data record for each different value of the analyzed property. Each data record contains two properties: the unique value and its frequency. &lt;i&gt;Sort&lt;/i&gt; controls whether or not to sort the data records by the unique property values.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When &lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;Continuous&lt;/i&gt; the incoming data records are not discarded. Instead, each data record is passed through with an additional property, &lt;b&gt;Frequency&lt;/b&gt;, containing the frequency of its value up to that point&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records, which are not passed through (unless Mode is set to &lt;I&gt;Continuous&lt;/I&gt;)</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>By default, one data record for each unique value of the property with its occurrence count</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Generate Frequencies</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SortData.1">
						<sci:component name="Sort Data" version="2">
							<sci:arg name="SortProperty1" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>First property to sort by</sci:help>
								<sci:member>SortDirection1</sci:member>
								<sci:member>SortAs1</sci:member>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="SortDirection1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval selected="true">AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty2" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Second property to sort by</sci:help>
								<sci:member>SortDirection2</sci:member>
								<sci:member>SortAs2</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty3" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Third property to sort by</sci:help>
								<sci:member>SortDirection3</sci:member>
								<sci:member>SortAs3</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty4" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fourth property to sort by</sci:help>
								<sci:member>SortDirection4</sci:member>
								<sci:member>SortAs4</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty5" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fifth property to sort by</sci:help>
								<sci:member>SortDirection5</sci:member>
								<sci:member>SortAs5</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty6" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Sixth property to sort by</sci:help>
								<sci:member>SortDirection6</sci:member>
								<sci:member>SortAs6</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Reorders the data records into a sorted order, depending on some property value.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>Incoming data records are held and sorted before being output in ascending or descending order of the named property.

Additional properties can be added to the sort by adding successive SortProperty, SortDirection, and SortAs parameters (i.e., SortProperty7, SortDirection7, and SortAs7, etc.).

Input             - Data records
Output Pass  - Data records (in sorted order).</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{E52CD4DE-1DAD-4AEA-A26D-5DEB4497365C}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sorts data records according to one or more properties
</sci:value>
								<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;To compare two records, the property values of &lt;i&gt;SortProperty1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;SortProperty2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;SortProperty3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The direction of sorting can be changed using &lt;i&gt;SortDirection&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records in sorted order</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the sort field(s)</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.1.1.400</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>12</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unknown</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Property" version="2">
							<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Property name to change</sci:help>
								<sci:value>Frequency</sci:value>
							</sci:arg>
							<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the new property</sci:help>
								<sci:value>False Positives</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Rename</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Renames a single property.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The component works for single properties as well as property arrays. 

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Rename Property</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Renames a property</sci:value>
								<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>13</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>14</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>Receptor</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Removes the specified properties from the property list.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to remove.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol ShowComment</sci:help>
								<sci:value>false</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Add Protocol Comment Here</sci:help>
								<sci:value>Add Protocol Comment Here</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2106 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.GenerateFrequency.1">
						<sci:component name="Generate Frequencies" version="2">
							<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property whose values will be collected
and their frequency of occurrence counted.</sci:help>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Sort</sci:member>
								<sci:member>Mode</sci:member>
							</sci:arg>
							<sci:arg name="Sort" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort the outputs as strings or numbers</sci:help>
								<sci:legalval selected="true">No</sci:legalval>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Mark the frequency continuously on each data record or collect the frequencies and output the final frequency for each property value at the end of processing. In either case, the output adds the property &quot;Frequency&quot; which contains the number of times that value was seen.
</sci:help>
								<sci:legalval>Continuous</sci:legalval>
								<sci:legalval selected="true">AtEnd</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 21 11:06:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DB96AC0A-54A4-46BD-99A7-F776C51F7F5D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Collects the frequency of occurrence of a given property&apos;s values.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>As the data records stream in, the frequency of occurrence for each value represented in the specified property (PropertyName) is counted. One property list data record for each value is generated with the specified property and a new property called &apos;Frequency&apos; containing the number of times that value was seen. By default, the incoming data records themselves are not passed through (AtEnd Mode).

If you set the advanced parameter Mode to Continuous, then the data is not sorted, but each incoming data record is passed through.  The value of the Frequency property is the number of samples with that value that have been seen so far.

Input             - Data records, which are not passed through
Output Pass  - Property list data records, one for each value</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the frequency of occurrence of each value for a specified property in the incoming data</sci:value>
								<sci:value>The property for which to calculate the frequencies is specified by &lt;i&gt;PropertyName&lt;/i&gt;. The input records are discarded.  An output record is generated for each unique property value.  Each output record contains two properties:
&lt;ul&gt;
&lt;li&gt;The property specified by &lt;i&gt;PropertyName&lt;/i&gt; containing the unique value.
&lt;li&gt;&lt;b&gt;Frequency&lt;/b&gt;, containing the number of times the value was seen.
&lt;/ul&gt;
&lt;p&gt;
The most common use of this component (&lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;AtEnd&lt;/i&gt;) is to calculate the frequency of each value for the specified property after all the incoming records have been seen. The incoming records are then discarded and the output consists of one data record for each different value of the analyzed property. Each data record contains two properties: the unique value and its frequency. &lt;i&gt;Sort&lt;/i&gt; controls whether or not to sort the data records by the unique property values.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When &lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;Continuous&lt;/i&gt; the incoming data records are not discarded. Instead, each data record is passed through with an additional property, &lt;b&gt;Frequency&lt;/b&gt;, containing the frequency of its value up to that point&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records, which are not passed through (unless Mode is set to &lt;I&gt;Continuous&lt;/I&gt;)</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>By default, one data record for each unique value of the property with its occurrence count</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>18</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Generate Frequencies</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SortData.1">
						<sci:component name="Sort Data" version="2">
							<sci:arg name="SortProperty1" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>First property to sort by</sci:help>
								<sci:member>SortDirection1</sci:member>
								<sci:member>SortAs1</sci:member>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="SortDirection1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval selected="true">AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty2" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Second property to sort by</sci:help>
								<sci:member>SortDirection2</sci:member>
								<sci:member>SortAs2</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty3" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Third property to sort by</sci:help>
								<sci:member>SortDirection3</sci:member>
								<sci:member>SortAs3</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty4" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fourth property to sort by</sci:help>
								<sci:member>SortDirection4</sci:member>
								<sci:member>SortAs4</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty5" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fifth property to sort by</sci:help>
								<sci:member>SortDirection5</sci:member>
								<sci:member>SortAs5</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty6" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Sixth property to sort by</sci:help>
								<sci:member>SortDirection6</sci:member>
								<sci:member>SortAs6</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Reorders the data records into a sorted order, depending on some property value.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>Incoming data records are held and sorted before being output in ascending or descending order of the named property.

Additional properties can be added to the sort by adding successive SortProperty, SortDirection, and SortAs parameters (i.e., SortProperty7, SortDirection7, and SortAs7, etc.).

Input             - Data records
Output Pass  - Data records (in sorted order).</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{E52CD4DE-1DAD-4AEA-A26D-5DEB4497365C}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sorts data records according to one or more properties
</sci:value>
								<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;To compare two records, the property values of &lt;i&gt;SortProperty1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;SortProperty2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;SortProperty3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The direction of sorting can be changed using &lt;i&gt;SortDirection&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records in sorted order</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the sort field(s)</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.1.1.400</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>19</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unknown</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Property" version="2">
							<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Property name to change</sci:help>
								<sci:value>Frequency</sci:value>
							</sci:arg>
							<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the new property</sci:help>
								<sci:value>True Negatives</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Rename</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Renames a single property.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The component works for single properties as well as property arrays. 

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Rename Property</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Renames a property</sci:value>
								<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>20</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>21</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>Receptor</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Removes the specified properties from the property list.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to remove.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol ShowComment</sci:help>
								<sci:value>false</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Add Protocol Comment Here</sci:help>
								<sci:value>Add Protocol Comment Here</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2106 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>22</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>$(Measured) = &apos;$(Inactive Class)&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Allows you to filter using the result from a PilotScript expression. The expression you specify is evaluated for each incoming data record, and is evaluated to a True or False value. If multiple statements are present, then the value of the last statement is used.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The &apos;Expression&apos; is evaluated for each incoming data record.  The last statement in the expression evaluates to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port.

Input             - Data records
Output Pass  - Data records which evaluate &apos;true&apos;
Output Fail    - Data records which evaluate &apos;false&apos;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -1720</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>23</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.GenerateFrequency.1">
						<sci:component name="Generate Frequencies" version="2">
							<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property whose values will be collected
and their frequency of occurrence counted.</sci:help>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Sort</sci:member>
								<sci:member>Mode</sci:member>
							</sci:arg>
							<sci:arg name="Sort" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort the outputs as strings or numbers</sci:help>
								<sci:legalval selected="true">No</sci:legalval>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Mark the frequency continuously on each data record or collect the frequencies and output the final frequency for each property value at the end of processing. In either case, the output adds the property &quot;Frequency&quot; which contains the number of times that value was seen.
</sci:help>
								<sci:legalval>Continuous</sci:legalval>
								<sci:legalval selected="true">AtEnd</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 21 11:06:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DB96AC0A-54A4-46BD-99A7-F776C51F7F5D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Collects the frequency of occurrence of a given property&apos;s values.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>As the data records stream in, the frequency of occurrence for each value represented in the specified property (PropertyName) is counted. One property list data record for each value is generated with the specified property and a new property called &apos;Frequency&apos; containing the number of times that value was seen. By default, the incoming data records themselves are not passed through (AtEnd Mode).

If you set the advanced parameter Mode to Continuous, then the data is not sorted, but each incoming data record is passed through.  The value of the Frequency property is the number of samples with that value that have been seen so far.

Input             - Data records, which are not passed through
Output Pass  - Property list data records, one for each value</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Generate Frequencies</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -1895</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the frequency of occurrence of each value for a specified property in the incoming data</sci:value>
								<sci:value>The property for which to calculate the frequencies is specified by &lt;i&gt;PropertyName&lt;/i&gt;. The input records are discarded.  An output record is generated for each unique property value.  Each output record contains two properties:
&lt;ul&gt;
&lt;li&gt;The property specified by &lt;i&gt;PropertyName&lt;/i&gt; containing the unique value.
&lt;li&gt;&lt;b&gt;Frequency&lt;/b&gt;, containing the number of times the value was seen.
&lt;/ul&gt;
&lt;p&gt;
The most common use of this component (&lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;AtEnd&lt;/i&gt;) is to calculate the frequency of each value for the specified property after all the incoming records have been seen. The incoming records are then discarded and the output consists of one data record for each different value of the analyzed property. Each data record contains two properties: the unique value and its frequency. &lt;i&gt;Sort&lt;/i&gt; controls whether or not to sort the data records by the unique property values.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When &lt;i&gt;Mode&lt;/i&gt; is set to &lt;i&gt;Continuous&lt;/i&gt; the incoming data records are not discarded. Instead, each data record is passed through with an additional property, &lt;b&gt;Frequency&lt;/b&gt;, containing the frequency of its value up to that point&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records, which are not passed through (unless Mode is set to &lt;I&gt;Continuous&lt;/I&gt;)</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>By default, one data record for each unique value of the property with its occurrence count</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>24</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Generate Frequencies</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SortData.1">
						<sci:component name="Sort Data" version="2">
							<sci:arg name="SortProperty1" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>First property to sort by</sci:help>
								<sci:member>SortDirection1</sci:member>
								<sci:member>SortAs1</sci:member>
								<sci:value>$(Model)</sci:value>
							</sci:arg>
							<sci:arg name="SortDirection1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs1" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval>AsNumbers</sci:legalval>
								<sci:legalval selected="true">AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty2" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Second property to sort by</sci:help>
								<sci:member>SortDirection2</sci:member>
								<sci:member>SortAs2</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs2" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty3" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Third property to sort by</sci:help>
								<sci:member>SortDirection3</sci:member>
								<sci:member>SortAs3</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs3" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty4" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fourth property to sort by</sci:help>
								<sci:member>SortDirection4</sci:member>
								<sci:member>SortAs4</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs4" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty5" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Fifth property to sort by</sci:help>
								<sci:member>SortDirection5</sci:member>
								<sci:member>SortAs5</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs5" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="SortProperty6" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Sixth property to sort by</sci:help>
								<sci:member>SortDirection6</sci:member>
								<sci:member>SortAs6</sci:member>
							</sci:arg>
							<sci:arg name="SortDirection6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort in increasing or decreasing order</sci:help>
								<sci:legalval selected="true">Increasing</sci:legalval>
								<sci:legalval>Decreasing</sci:legalval>
							</sci:arg>
							<sci:arg name="SortAs6" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Sort as numbers or as text</sci:help>
								<sci:legalval selected="true">AsNumbers</sci:legalval>
								<sci:legalval>AsText</sci:legalval>
								<sci:legalval>AsCaseSensitiveText</sci:legalval>
								<sci:legalval>AsDates</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Reorders the data records into a sorted order, depending on some property value.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>Incoming data records are held and sorted before being output in ascending or descending order of the named property.

Additional properties can be added to the sort by adding successive SortProperty, SortDirection, and SortAs parameters (i.e., SortProperty7, SortDirection7, and SortAs7, etc.).

Input             - Data records
Output Pass  - Data records (in sorted order).</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{E52CD4DE-1DAD-4AEA-A26D-5DEB4497365C}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -1895</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sorts data records according to one or more properties
</sci:value>
								<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;To compare two records, the property values of &lt;i&gt;SortProperty1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;SortProperty2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;SortProperty3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The direction of sorting can be changed using &lt;i&gt;SortDirection&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records in sorted order</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the sort field(s)</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>4.1.1.400</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>25</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unknown</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Property" version="2">
							<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Property name to change</sci:help>
								<sci:value>Frequency</sci:value>
							</sci:arg>
							<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the new property</sci:help>
								<sci:value>False Negatives</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Rename</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Renames a single property.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:07:49 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>The component works for single properties as well as property arrays. 

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Rename Property</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -1895</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Renames a property</sci:value>
								<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>26</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Rename Property</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>Index</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -1895</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>27</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>Receptor</sci:value>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Removes the specified properties from the property list.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to remove.

Input             - Data records
Output Pass  - All Data records</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol ShowComment</sci:help>
								<sci:value>false</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Add Protocol Comment Here</sci:help>
								<sci:value>Add Protocol Comment Here</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2106 -1895</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>28</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="39" to="51" type="true"/>
					<sci:connectid from="51" to="37" type="true"/>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="1" to="2" type="true"/>
					<sci:connectid from="2" to="3" type="true"/>
					<sci:connectid from="3" to="4" type="true"/>
					<sci:connectid from="4" to="5" type="true"/>
					<sci:connectid from="5" to="6" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
					<sci:connectid from="7" to="8" type="true"/>
					<sci:connectid from="8" to="39" type="true"/>
					<sci:connectid from="8" to="29" type="true"/>
					<sci:connectid from="10" to="0" type="true"/>
					<sci:connectid from="10" to="11" type="false"/>
					<sci:connectid from="29" to="9" type="true"/>
					<sci:connectid from="9" to="38" type="true"/>
					<sci:connectid from="9" to="52" type="true"/>
					<sci:connectid from="52" to="53" type="true"/>
					<sci:connectid from="16" to="17" type="true"/>
					<sci:connectid from="17" to="10" type="true"/>
					<sci:connectid from="17" to="23" type="false"/>
					<sci:connectid from="11" to="12" type="true"/>
					<sci:connectid from="12" to="13" type="true"/>
					<sci:connectid from="13" to="14" type="true"/>
					<sci:connectid from="14" to="15" type="true"/>
					<sci:connectid from="15" to="5" type="true"/>
					<sci:connectid from="18" to="19" type="true"/>
					<sci:connectid from="19" to="20" type="true"/>
					<sci:connectid from="20" to="21" type="true"/>
					<sci:connectid from="21" to="22" type="true"/>
					<sci:connectid from="22" to="5" type="true"/>
					<sci:connectid from="23" to="18" type="true"/>
					<sci:connectid from="23" to="24" type="false"/>
					<sci:connectid from="24" to="25" type="true"/>
					<sci:connectid from="25" to="26" type="true"/>
					<sci:connectid from="26" to="27" type="true"/>
					<sci:connectid from="27" to="28" type="true"/>
					<sci:connectid from="28" to="5" type="true"/>
					<sci:version iVal="2"/>
				</sci:protocol>
			</sci:data>
			<sci:connectid from="18" to="19" type="true"/>
			<sci:connectid from="120" to="121" type="true"/>
			<sci:connectid from="121" to="122" type="true"/>
			<sci:connectid from="122" to="124" type="true"/>
			<sci:connectid from="43" to="32" type="true"/>
			<sci:connectid from="32" to="31" type="true"/>
			<sci:connectid from="31" to="50" type="true"/>
			<sci:connectid from="50" to="54" type="true"/>
			<sci:connectid from="54" to="59" type="true"/>
			<sci:connectid from="59" to="60" type="true"/>
			<sci:connectid from="60" to="117" type="true"/>
			<sci:connectid from="117" to="119" type="true"/>
			<sci:connectid from="119" to="120" type="true"/>
			<sci:connectid from="119" to="126" type="true"/>
			<sci:connectid from="119" to="46" type="true"/>
			<sci:connectid from="119" to="129" type="true"/>
			<sci:connectid from="46" to="39" type="true"/>
			<sci:connectid from="46" to="47" type="false"/>
			<sci:connectid from="129" to="131" type="true"/>
			<sci:connectid from="129" to="130" type="false"/>
			<sci:connectid from="45" to="58" type="true"/>
			<sci:connectid from="58" to="36" type="false"/>
			<sci:connectid from="36" to="37" type="true"/>
			<sci:connectid from="37" to="49" type="true"/>
			<sci:connectid from="49" to="53" type="true"/>
			<sci:connectid from="53" to="42" type="true"/>
			<sci:connectid from="42" to="117" type="true"/>
			<sci:connectid from="101" to="111" type="true"/>
			<sci:connectid from="111" to="108" type="true"/>
			<sci:connectid from="108" to="107" type="true"/>
			<sci:connectid from="107" to="109" type="true"/>
			<sci:connectid from="109" to="110" type="true"/>
			<sci:connectid from="110" to="102" type="true"/>
			<sci:connectid from="102" to="105" type="true"/>
			<sci:connectid from="105" to="100" type="true"/>
			<sci:connectid from="48" to="128" type="true"/>
			<sci:connectid from="128" to="62" type="true"/>
			<sci:connectid from="62" to="61" type="true"/>
			<sci:connectid from="61" to="63" type="true"/>
			<sci:connectid from="63" to="66" type="true"/>
			<sci:connectid from="66" to="56" type="true"/>
			<sci:connectid from="56" to="105" type="true"/>
			<sci:version iVal="6"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
